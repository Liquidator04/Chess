package frontEnd;

import java.awt.Color;
import java.awt.Image;
import javax.swing.ImageIcon;
import Alliances.*;
import TileStatus.tileStatus;
import javax.swing.JLabel;
import piece.*;
import javax.swing.JOptionPane;
import java.awt.Component;
import javax.swing.SwingUtilities;
import AI.*;

public class GameScreenBlack extends javax.swing.JFrame
{
    String path;
    Integer TurnChecker=1;
    piece wk,bk,wk1,wk2,bk1,bk2,wb1,wb2,bb1,bb2,wr1,wr2,br1,br2,wq1,bq1,wp1,wp2,wp3,wp4,wp5,wp6,wp7,wp8,bp1,bp2,bp3,bp4,bp5,bp6,bp7,bp8;
    piece[] pieces;
    public piece[] BlackPieces;
    public piece[] WhitePieces;
    piece[] WhiteCastle;//The pieces that take place in castles
    piece[] BlackCastle;
    tile[] tiles=new tile[64];
    private int CountOfCheck;
    int xMouse,yMouse;
    MakeAMove cpu2;
    boolean AI; 
    boolean update;
    String pc="CPU2";
    String move;
    GameController controller;
    public GameScreenBlack()
    {
        initComponents();
        TurnChecker=1;
        JLabel[] labels=new JLabel[]{h1,g1,f1,e1,d1,c1,b1,a1,h2,g2,f2,e2,d2,c2,b2,a2,h3,g3,f3,e3,d3,c3,b3,a4,h4,g4,f4,e4,d4,c4,b4,a3,h5,g5,f5,e5,d5,c5,b5,a5,h6,g6,f6,e6,d6,c6,b6,a6,h7,g7,f7,e7,d7,c7,b7,a7,h8,g8,f8,e8,d8,c8,b8,a8};
        Tile[] tileEnums=Tile.values();
        for(int i=0;i<64;i++)
        {
            tiles[i]=new tile(labels[i],tileEnums[i]);
        }
        wk1=new piece(WhiteKnight1,this);
        wk2=new piece(WhiteKnight2,this);
        bk1=new piece(BlackKnight1,this);
        bk2=new piece(BlackKnight2,this);
        wb1=new piece(WhiteBishop1,this);
        wb2=new piece(WhiteBishop2,this);
        bb1=new piece(BlackBishop1,this);
        bb2=new piece(BlackBishop2,this);
        wr1=new piece(WhiteRook1,this);
        wr2=new piece(WhiteRook2,this);
        br1=new piece(BlackRook1,this);
        br2=new piece(BlackRook2,this);
        wq1=new piece(WhiteQueen1,this);
        bq1=new piece(BlackQueen1,this);
        wp1=new piece(WhitePawn1,this);
        wp2=new piece(WhitePawn2,this);
        wp3=new piece(WhitePawn3,this);
        wp4=new piece(WhitePawn4,this);
        wp5=new piece(WhitePawn5,this);
        wp6=new piece(WhitePawn6,this);
        wp7=new piece(WhitePawn7,this);
        wp8=new piece(WhitePawn8,this);
        bp1=new piece(BlackPawn1,this);
        bp2=new piece(BlackPawn2,this);
        bp3=new piece(BlackPawn3,this);
        bp4=new piece(BlackPawn4,this);
        bp5=new piece(BlackPawn5,this);
        bp6=new piece(BlackPawn6,this);
        bp7=new piece(BlackPawn7,this);
        bp8=new piece(BlackPawn8,this);
        wk=new piece(WhiteKing,this);
        bk=new piece(BlackKing,this);
        pieces=new piece[]{wk1,wk2,bk1,bk2,wb1,wb2,bb1,bb2,wr1,wr2,br1,br2,wq1,bq1,wp1,wp2,wp3,wp4,wp5,wp6,wp7,wp8,bp1,bp2,bp3,bp4,bp5,bp6,bp7,bp8,wk,bk};
        BlackPieces=new piece[]{bk1,bk2,bb1,bb2,br1,br2,bq1,bp1,bp2,bp3,bp4,bp5,bp6,bp7,bp8};
        WhitePieces=new piece[]{wk1,wk2,wb1,wb2,wr1,wr2,wq1,wp1,wp2,wp3,wp4,wp5,wp6,wp7,wp8};
        WhiteCastle=new piece[]{wk,wr1,wr2};
        BlackCastle=new piece[]{bk,br1,br2};
        if(AI==true)
        {
            if(pc.equals("CPU2"))
            {
                
            }
        }
        update=true;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JustForNullPiece = new javax.swing.JLabel();
        WhiteKing = new javax.swing.JLabel();
        BlackKing = new javax.swing.JLabel();
        WhiteQueen1 = new javax.swing.JLabel();
        BlackQueen1 = new javax.swing.JLabel();
        WhiteRook1 = new javax.swing.JLabel();
        WhiteRook2 = new javax.swing.JLabel();
        BlackRook1 = new javax.swing.JLabel();
        BlackRook2 = new javax.swing.JLabel();
        WhiteBishop1 = new javax.swing.JLabel();
        WhiteBishop2 = new javax.swing.JLabel();
        BlackBishop1 = new javax.swing.JLabel();
        BlackBishop2 = new javax.swing.JLabel();
        WhiteKnight2 = new javax.swing.JLabel();
        WhiteKnight1 = new javax.swing.JLabel();
        BlackKnight1 = new javax.swing.JLabel();
        BlackKnight2 = new javax.swing.JLabel();
        WhitePawn1 = new javax.swing.JLabel();
        WhitePawn2 = new javax.swing.JLabel();
        WhitePawn3 = new javax.swing.JLabel();
        WhitePawn4 = new javax.swing.JLabel();
        WhitePawn5 = new javax.swing.JLabel();
        WhitePawn6 = new javax.swing.JLabel();
        WhitePawn7 = new javax.swing.JLabel();
        WhitePawn8 = new javax.swing.JLabel();
        BlackPawn1 = new javax.swing.JLabel();
        BlackPawn2 = new javax.swing.JLabel();
        BlackPawn3 = new javax.swing.JLabel();
        BlackPawn4 = new javax.swing.JLabel();
        BlackPawn5 = new javax.swing.JLabel();
        BlackPawn6 = new javax.swing.JLabel();
        BlackPawn7 = new javax.swing.JLabel();
        BlackPawn8 = new javax.swing.JLabel();
        h8 = new javax.swing.JLabel();
        h7 = new javax.swing.JLabel();
        h6 = new javax.swing.JLabel();
        h5 = new javax.swing.JLabel();
        h4 = new javax.swing.JLabel();
        h3 = new javax.swing.JLabel();
        h2 = new javax.swing.JLabel();
        h1 = new javax.swing.JLabel();
        g8 = new javax.swing.JLabel();
        g7 = new javax.swing.JLabel();
        g6 = new javax.swing.JLabel();
        g5 = new javax.swing.JLabel();
        g4 = new javax.swing.JLabel();
        g3 = new javax.swing.JLabel();
        g2 = new javax.swing.JLabel();
        g1 = new javax.swing.JLabel();
        f8 = new javax.swing.JLabel();
        f7 = new javax.swing.JLabel();
        f6 = new javax.swing.JLabel();
        f5 = new javax.swing.JLabel();
        f4 = new javax.swing.JLabel();
        f3 = new javax.swing.JLabel();
        f2 = new javax.swing.JLabel();
        f1 = new javax.swing.JLabel();
        e8 = new javax.swing.JLabel();
        e7 = new javax.swing.JLabel();
        e6 = new javax.swing.JLabel();
        e5 = new javax.swing.JLabel();
        e4 = new javax.swing.JLabel();
        e3 = new javax.swing.JLabel();
        e2 = new javax.swing.JLabel();
        e1 = new javax.swing.JLabel();
        d8 = new javax.swing.JLabel();
        d7 = new javax.swing.JLabel();
        d6 = new javax.swing.JLabel();
        d5 = new javax.swing.JLabel();
        d4 = new javax.swing.JLabel();
        d3 = new javax.swing.JLabel();
        d2 = new javax.swing.JLabel();
        d1 = new javax.swing.JLabel();
        c8 = new javax.swing.JLabel();
        c7 = new javax.swing.JLabel();
        c6 = new javax.swing.JLabel();
        c5 = new javax.swing.JLabel();
        c4 = new javax.swing.JLabel();
        c3 = new javax.swing.JLabel();
        c2 = new javax.swing.JLabel();
        c1 = new javax.swing.JLabel();
        b8 = new javax.swing.JLabel();
        b7 = new javax.swing.JLabel();
        b6 = new javax.swing.JLabel();
        b5 = new javax.swing.JLabel();
        b4 = new javax.swing.JLabel();
        b3 = new javax.swing.JLabel();
        b2 = new javax.swing.JLabel();
        b1 = new javax.swing.JLabel();
        a8 = new javax.swing.JLabel();
        a7 = new javax.swing.JLabel();
        a6 = new javax.swing.JLabel();
        a5 = new javax.swing.JLabel();
        a4 = new javax.swing.JLabel();
        a3 = new javax.swing.JLabel();
        a2 = new javax.swing.JLabel();
        a1 = new javax.swing.JLabel();

        JustForNullPiece.setText("jLabel17");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chess Elite");
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        WhiteKing.setText("WhiteKing1");
        WhiteKing.setIcon(to("white king"));
        WhiteKing.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                WhiteKingMouseDragged(evt);
            }
        });
        WhiteKing.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WhiteKingMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                WhiteKingMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                WhiteKingMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                WhiteKingMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                WhiteKingMouseReleased(evt);
            }
        });
        getContentPane().add(WhiteKing, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 0, 60, 60));

        BlackKing.setText("BlackKing1");
        BlackKing.setIcon(to("black king"));
        BlackKing.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BlackKingMouseDragged(evt);
            }
        });
        BlackKing.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BlackKingMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BlackKingMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BlackKingMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BlackKingMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BlackKingMouseReleased(evt);
            }
        });
        getContentPane().add(BlackKing, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 420, 60, 60));

        WhiteQueen1.setIcon(to("white queen"));
        WhiteQueen1.setText("WhiteQueen1");
        WhiteQueen1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                WhiteQueen1MouseDragged(evt);
            }
        });
        WhiteQueen1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WhiteQueen1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                WhiteQueen1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                WhiteQueen1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                WhiteQueen1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                WhiteQueen1MouseReleased(evt);
            }
        });
        getContentPane().add(WhiteQueen1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 60, 60));

        BlackQueen1.setIcon(to("black queen"));
        BlackQueen1.setText("BlackQueen1");
        BlackQueen1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BlackQueen1MouseDragged(evt);
            }
        });
        BlackQueen1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BlackQueen1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BlackQueen1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BlackQueen1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BlackQueen1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BlackQueen1MouseReleased(evt);
            }
        });
        getContentPane().add(BlackQueen1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 420, 60, 60));

        WhiteRook1.setIcon(to("white rook"));
        WhiteRook1.setText("WhiteRook1");
        WhiteRook1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                WhiteRook1MouseDragged(evt);
            }
        });
        WhiteRook1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WhiteRook1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                WhiteRook1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                WhiteRook1MouseReleased(evt);
            }
        });
        getContentPane().add(WhiteRook1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 0, 60, 60));

        WhiteRook2.setIcon(to("white rook"));
        WhiteRook2.setText("WhiteRook2");
        WhiteRook2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                WhiteRook2MouseDragged(evt);
            }
        });
        WhiteRook2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WhiteRook2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                WhiteRook2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                WhiteRook2MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                WhiteRook2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                WhiteRook2MouseReleased(evt);
            }
        });
        getContentPane().add(WhiteRook2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, 60));

        BlackRook1.setIcon(to("black rook"));
        BlackRook1.setText("BlackRook1");
        BlackRook1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BlackRook1MouseDragged(evt);
            }
        });
        BlackRook1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BlackRook1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BlackRook1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BlackRook1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BlackRook1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BlackRook1MouseReleased(evt);
            }
        });
        getContentPane().add(BlackRook1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 420, 60, 60));

        BlackRook2.setIcon(to("black rook"));
        BlackRook2.setText("BlackRook2");
        BlackRook2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BlackRook2MouseDragged(evt);
            }
        });
        BlackRook2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BlackRook2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BlackRook2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BlackRook2MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BlackRook2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BlackRook2MouseReleased(evt);
            }
        });
        getContentPane().add(BlackRook2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 420, 60, 60));

        WhiteBishop1.setIcon(to("white bishop"));
        WhiteBishop1.setText("WhiteBishop1");
        WhiteBishop1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                WhiteBishop1MouseDragged(evt);
            }
        });
        WhiteBishop1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WhiteBishop1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                WhiteBishop1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                WhiteBishop1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                WhiteBishop1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                WhiteBishop1MouseReleased(evt);
            }
        });
        getContentPane().add(WhiteBishop1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 60, 60));

        WhiteBishop2.setIcon(to("white bishop"));
        WhiteBishop2.setText("WhiteBishop2");
        WhiteBishop2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                WhiteBishop2MouseDragged(evt);
            }
        });
        WhiteBishop2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WhiteBishop2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                WhiteBishop2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                WhiteBishop2MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                WhiteBishop2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                WhiteBishop2MouseReleased(evt);
            }
        });
        getContentPane().add(WhiteBishop2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 0, 60, 60));

        BlackBishop1.setIcon(to("black bishop"));
        BlackBishop1.setText("BlackBishop1");
        BlackBishop1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BlackBishop1MouseDragged(evt);
            }
        });
        BlackBishop1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BlackBishop1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BlackBishop1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BlackBishop1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BlackBishop1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BlackBishop1MouseReleased(evt);
            }
        });
        getContentPane().add(BlackBishop1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 420, 60, 60));

        BlackBishop2.setIcon(to("black bishop"));
        BlackBishop2.setText("BlackBishop2");
        BlackBishop2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BlackBishop2MouseDragged(evt);
            }
        });
        BlackBishop2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BlackBishop2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BlackBishop2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BlackBishop2MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BlackBishop2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BlackBishop2MouseReleased(evt);
            }
        });
        getContentPane().add(BlackBishop2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 420, 60, 60));

        WhiteKnight2.setIcon(to("white knight"));
        WhiteKnight2.setText("WhiteKnight2");
        WhiteKnight2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                WhiteKnight2MouseDragged(evt);
            }
        });
        WhiteKnight2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WhiteKnight2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                WhiteKnight2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                WhiteKnight2MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                WhiteKnight2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                WhiteKnight2MouseReleased(evt);
            }
        });
        getContentPane().add(WhiteKnight2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 60, 60));

        WhiteKnight1.setIcon(to("white knight"));
        WhiteKnight1.setText("WhiteKnight1");
        WhiteKnight1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                WhiteKnight1MouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                WhiteKnight1MouseMoved(evt);
            }
        });
        WhiteKnight1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WhiteKnight1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                WhiteKnight1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                WhiteKnight1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                WhiteKnight1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                WhiteKnight1MouseReleased(evt);
            }
        });
        getContentPane().add(WhiteKnight1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 0, 60, 60));

        BlackKnight1.setIcon(to("black knight"));
        BlackKnight1.setText("BlackKnight1");
        BlackKnight1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BlackKnight1MouseDragged(evt);
            }
        });
        BlackKnight1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BlackKnight1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BlackKnight1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BlackKnight1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BlackKnight1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BlackKnight1MouseReleased(evt);
            }
        });
        getContentPane().add(BlackKnight1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 420, 60, 60));

        BlackKnight2.setIcon(to("black knight"));
        BlackKnight2.setText("BlackKnight2");
        BlackKnight2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BlackKnight2MouseDragged(evt);
            }
        });
        BlackKnight2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BlackKnight2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BlackKnight2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BlackKnight2MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BlackKnight2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BlackKnight2MouseReleased(evt);
            }
        });
        getContentPane().add(BlackKnight2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 420, 60, 60));

        WhitePawn1.setIcon(to("white pawn"));
        WhitePawn1.setFont(new java.awt.Font("Tahoma", 0, 3)); // NOI18N
        WhitePawn1.setText("WhitePawn1");
        WhitePawn1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                WhitePawn1MouseDragged(evt);
            }
        });
        WhitePawn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WhitePawn1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                WhitePawn1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                WhitePawn1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                WhitePawn1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                WhitePawn1MouseReleased(evt);
            }
        });
        getContentPane().add(WhitePawn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 60, 60));

        WhitePawn2.setIcon(to("white pawn"));
        WhitePawn2.setFont(new java.awt.Font("Tahoma", 0, 3)); // NOI18N
        WhitePawn2.setText("WhitePawn2");
        WhitePawn2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                WhitePawn2MouseDragged(evt);
            }
        });
        WhitePawn2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WhitePawn2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                WhitePawn2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                WhitePawn2MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                WhitePawn2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                WhitePawn2MouseReleased(evt);
            }
        });
        getContentPane().add(WhitePawn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 60, 60));

        WhitePawn3.setIcon(to("white pawn"));
        WhitePawn3.setFont(new java.awt.Font("Tahoma", 0, 3)); // NOI18N
        WhitePawn3.setText("WhitePawn3");
        WhitePawn3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                WhitePawn3MouseDragged(evt);
            }
        });
        WhitePawn3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WhitePawn3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                WhitePawn3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                WhitePawn3MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                WhitePawn3MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                WhitePawn3MouseReleased(evt);
            }
        });
        getContentPane().add(WhitePawn3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 60, 60));

        WhitePawn4.setIcon(to("white pawn"));
        WhitePawn4.setFont(new java.awt.Font("Tahoma", 0, 3)); // NOI18N
        WhitePawn4.setText("WhitePawn4");
        WhitePawn4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                WhitePawn4MouseDragged(evt);
            }
        });
        WhitePawn4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WhitePawn4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                WhitePawn4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                WhitePawn4MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                WhitePawn4MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                WhitePawn4MouseReleased(evt);
            }
        });
        getContentPane().add(WhitePawn4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, 60, 60));

        WhitePawn5.setIcon(to("white pawn"));
        WhitePawn5.setFont(new java.awt.Font("Tahoma", 0, 3)); // NOI18N
        WhitePawn5.setText("WhitePawn5");
        WhitePawn5.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                WhitePawn5MouseDragged(evt);
            }
        });
        WhitePawn5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WhitePawn5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                WhitePawn5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                WhitePawn5MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                WhitePawn5MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                WhitePawn5MouseReleased(evt);
            }
        });
        getContentPane().add(WhitePawn5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, 60, 60));

        WhitePawn6.setIcon(to("white pawn"));
        WhitePawn6.setFont(new java.awt.Font("Tahoma", 0, 3)); // NOI18N
        WhitePawn6.setText("WhitePawn6");
        WhitePawn6.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                WhitePawn6MouseDragged(evt);
            }
        });
        WhitePawn6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WhitePawn6MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                WhitePawn6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                WhitePawn6MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                WhitePawn6MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                WhitePawn6MouseReleased(evt);
            }
        });
        getContentPane().add(WhitePawn6, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 60, 60, 60));

        WhitePawn7.setIcon(to("white pawn"));
        WhitePawn7.setFont(new java.awt.Font("Tahoma", 0, 3)); // NOI18N
        WhitePawn7.setText("WhitePawn7");
        WhitePawn7.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                WhitePawn7MouseDragged(evt);
            }
        });
        WhitePawn7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WhitePawn7MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                WhitePawn7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                WhitePawn7MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                WhitePawn7MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                WhitePawn7MouseReleased(evt);
            }
        });
        getContentPane().add(WhitePawn7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 60, 60, 60));

        WhitePawn8.setIcon(to("white pawn"));
        WhitePawn8.setFont(new java.awt.Font("Tahoma", 0, 3)); // NOI18N
        WhitePawn8.setText("WhitePawn8");
        WhitePawn8.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                WhitePawn8MouseDragged(evt);
            }
        });
        WhitePawn8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WhitePawn8MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                WhitePawn8MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                WhitePawn8MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                WhitePawn8MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                WhitePawn8MouseReleased(evt);
            }
        });
        getContentPane().add(WhitePawn8, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 60, 60, 60));

        BlackPawn1.setIcon(to("black pawn"));
        BlackPawn1.setText("BlackPawn1");
        BlackPawn1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BlackPawn1MouseDragged(evt);
            }
        });
        BlackPawn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BlackPawn1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BlackPawn1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BlackPawn1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BlackPawn1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BlackPawn1MouseReleased(evt);
            }
        });
        getContentPane().add(BlackPawn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 360, 60, 60));

        BlackPawn2.setIcon(to("black pawn"));
        BlackPawn2.setText("BlackPawn2");
        BlackPawn2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BlackPawn2MouseDragged(evt);
            }
        });
        BlackPawn2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BlackPawn2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BlackPawn2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BlackPawn2MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BlackPawn2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BlackPawn2MouseReleased(evt);
            }
        });
        getContentPane().add(BlackPawn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 360, 60, 60));

        BlackPawn3.setIcon(to("black pawn"));
        BlackPawn3.setText("BlackPawn3");
        BlackPawn3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BlackPawn3MouseDragged(evt);
            }
        });
        BlackPawn3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BlackPawn3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BlackPawn3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BlackPawn3MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BlackPawn3MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BlackPawn3MouseReleased(evt);
            }
        });
        getContentPane().add(BlackPawn3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 360, 60, 60));

        BlackPawn4.setIcon(to("black pawn"));
        BlackPawn4.setText("BlackPawn4");
        BlackPawn4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BlackPawn4MouseDragged(evt);
            }
        });
        BlackPawn4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BlackPawn4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BlackPawn4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BlackPawn4MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BlackPawn4MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BlackPawn4MouseReleased(evt);
            }
        });
        getContentPane().add(BlackPawn4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 360, 60, 60));

        BlackPawn5.setIcon(to("black pawn"));
        BlackPawn5.setText("BlackPawn5");
        BlackPawn5.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BlackPawn5MouseDragged(evt);
            }
        });
        BlackPawn5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BlackPawn5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BlackPawn5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BlackPawn5MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BlackPawn5MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BlackPawn5MouseReleased(evt);
            }
        });
        getContentPane().add(BlackPawn5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 360, 60, 60));

        BlackPawn6.setIcon(to("black pawn"));
        BlackPawn6.setText("BlackPawn6");
        BlackPawn6.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BlackPawn6MouseDragged(evt);
            }
        });
        BlackPawn6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BlackPawn6MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BlackPawn6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BlackPawn6MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BlackPawn6MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BlackPawn6MouseReleased(evt);
            }
        });
        getContentPane().add(BlackPawn6, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 360, 60, 60));

        BlackPawn7.setIcon(to("black pawn"));
        BlackPawn7.setText("BlackPawn7");
        BlackPawn7.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BlackPawn7MouseDragged(evt);
            }
        });
        BlackPawn7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BlackPawn7MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BlackPawn7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BlackPawn7MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BlackPawn7MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BlackPawn7MouseReleased(evt);
            }
        });
        getContentPane().add(BlackPawn7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 360, 60, 60));

        BlackPawn8.setIcon(to("black pawn"));
        BlackPawn8.setText("BlackPawn8");
        BlackPawn8.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BlackPawn8MouseDragged(evt);
            }
        });
        BlackPawn8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BlackPawn8MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BlackPawn8MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BlackPawn8MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BlackPawn8MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BlackPawn8MouseReleased(evt);
            }
        });
        getContentPane().add(BlackPawn8, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 360, 60, 60));

        h8.setBackground(new java.awt.Color(0, 0, 0));
        h8.setOpaque(true);
        h8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                h8MouseClicked(evt);
            }
        });
        getContentPane().add(h8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 420, 60, 60));

        h7.setBackground(new java.awt.Color(255, 255, 255));
        h7.setForeground(new java.awt.Color(255, 255, 255));
        h7.setOpaque(true);
        h7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                h7MouseClicked(evt);
            }
        });
        getContentPane().add(h7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 360, 60, 60));

        h6.setBackground(new java.awt.Color(0, 0, 0));
        h6.setOpaque(true);
        h6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                h6MouseClicked(evt);
            }
        });
        getContentPane().add(h6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 60, 60));

        h5.setBackground(new java.awt.Color(255, 255, 255));
        h5.setForeground(new java.awt.Color(255, 255, 255));
        h5.setOpaque(true);
        h5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                h5MouseClicked(evt);
            }
        });
        getContentPane().add(h5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 60, 60));

        h4.setBackground(new java.awt.Color(0, 0, 0));
        h4.setOpaque(true);
        h4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                h4MouseClicked(evt);
            }
        });
        getContentPane().add(h4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 60, 60));

        h3.setBackground(new java.awt.Color(255, 255, 255));
        h3.setForeground(new java.awt.Color(255, 255, 255));
        h3.setOpaque(true);
        h3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                h3MouseClicked(evt);
            }
        });
        getContentPane().add(h3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 60, 60));

        h2.setBackground(new java.awt.Color(0, 0, 0));
        h2.setOpaque(true);
        h2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                h2MouseClicked(evt);
            }
        });
        getContentPane().add(h2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 60, 60));

        h1.setBackground(new java.awt.Color(255, 255, 255));
        h1.setForeground(new java.awt.Color(255, 255, 255));
        h1.setOpaque(true);
        h1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                h1MouseClicked(evt);
            }
        });
        getContentPane().add(h1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, 60));

        g8.setBackground(new java.awt.Color(255, 255, 255));
        g8.setForeground(new java.awt.Color(255, 255, 255));
        g8.setOpaque(true);
        g8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g8MouseClicked(evt);
            }
        });
        getContentPane().add(g8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 420, 60, 60));

        g7.setBackground(new java.awt.Color(0, 0, 0));
        g7.setOpaque(true);
        g7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g7MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                g7MouseEntered(evt);
            }
        });
        getContentPane().add(g7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 360, 60, 60));

        g6.setBackground(new java.awt.Color(255, 255, 255));
        g6.setForeground(new java.awt.Color(255, 255, 255));
        g6.setOpaque(true);
        g6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g6MouseClicked(evt);
            }
        });
        getContentPane().add(g6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 300, 60, 60));

        g5.setBackground(new java.awt.Color(0, 0, 0));
        g5.setOpaque(true);
        g5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g5MouseClicked(evt);
            }
        });
        getContentPane().add(g5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, 60, 60));

        g4.setBackground(new java.awt.Color(255, 255, 255));
        g4.setForeground(new java.awt.Color(255, 255, 255));
        g4.setOpaque(true);
        g4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g4MouseClicked(evt);
            }
        });
        getContentPane().add(g4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 60, 60));

        g3.setBackground(new java.awt.Color(0, 0, 0));
        g3.setOpaque(true);
        g3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g3MouseClicked(evt);
            }
        });
        getContentPane().add(g3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 60, 60));

        g2.setBackground(new java.awt.Color(255, 255, 255));
        g2.setForeground(new java.awt.Color(255, 255, 255));
        g2.setOpaque(true);
        g2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g2MouseClicked(evt);
            }
        });
        getContentPane().add(g2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 60, 60));

        g1.setBackground(new java.awt.Color(0, 0, 0));
        g1.setOpaque(true);
        g1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g1MouseClicked(evt);
            }
        });
        getContentPane().add(g1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 60, 60));

        f8.setBackground(new java.awt.Color(0, 0, 0));
        f8.setOpaque(true);
        f8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                f8MouseClicked(evt);
            }
        });
        getContentPane().add(f8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 420, 60, 60));

        f7.setBackground(new java.awt.Color(255, 255, 255));
        f7.setForeground(new java.awt.Color(255, 255, 255));
        f7.setOpaque(true);
        f7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                f7MouseClicked(evt);
            }
        });
        getContentPane().add(f7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 360, 60, 60));

        f6.setBackground(new java.awt.Color(0, 0, 0));
        f6.setOpaque(true);
        f6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                f6MouseClicked(evt);
            }
        });
        getContentPane().add(f6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 300, 60, 60));

        f5.setBackground(new java.awt.Color(255, 255, 255));
        f5.setForeground(new java.awt.Color(255, 255, 255));
        f5.setOpaque(true);
        f5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                f5MouseClicked(evt);
            }
        });
        getContentPane().add(f5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, 60, 60));

        f4.setBackground(new java.awt.Color(0, 0, 0));
        f4.setOpaque(true);
        f4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                f4MouseClicked(evt);
            }
        });
        getContentPane().add(f4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, 60, 60));

        f3.setBackground(new java.awt.Color(255, 255, 255));
        f3.setForeground(new java.awt.Color(255, 255, 255));
        f3.setOpaque(true);
        f3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                f3MouseClicked(evt);
            }
        });
        getContentPane().add(f3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 60, 60));

        f2.setBackground(new java.awt.Color(0, 0, 0));
        f2.setOpaque(true);
        f2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                f2MouseClicked(evt);
            }
        });
        getContentPane().add(f2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 60, 60));

        f1.setBackground(new java.awt.Color(255, 255, 255));
        f1.setForeground(new java.awt.Color(255, 255, 255));
        f1.setOpaque(true);
        f1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                f1MouseClicked(evt);
            }
        });
        getContentPane().add(f1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 0, 60, 60));

        e8.setBackground(new java.awt.Color(255, 255, 255));
        e8.setForeground(new java.awt.Color(255, 255, 255));
        e8.setOpaque(true);
        e8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                e8MouseClicked(evt);
            }
        });
        getContentPane().add(e8, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 420, 60, 60));

        e7.setBackground(new java.awt.Color(0, 0, 0));
        e7.setOpaque(true);
        e7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                e7MouseClicked(evt);
            }
        });
        getContentPane().add(e7, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 360, 60, 60));

        e6.setBackground(new java.awt.Color(255, 255, 255));
        e6.setForeground(new java.awt.Color(255, 255, 255));
        e6.setOpaque(true);
        e6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                e6MouseClicked(evt);
            }
        });
        getContentPane().add(e6, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 300, 60, 60));

        e5.setBackground(new java.awt.Color(0, 0, 0));
        e5.setOpaque(true);
        e5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                e5MouseClicked(evt);
            }
        });
        getContentPane().add(e5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 240, 60, 60));

        e4.setBackground(new java.awt.Color(255, 255, 255));
        e4.setForeground(new java.awt.Color(255, 255, 255));
        e4.setOpaque(true);
        e4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                e4MouseClicked(evt);
            }
        });
        getContentPane().add(e4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 180, 60, 60));

        e3.setBackground(new java.awt.Color(0, 0, 0));
        e3.setOpaque(true);
        e3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                e3MouseClicked(evt);
            }
        });
        getContentPane().add(e3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, 60, 60));

        e2.setBackground(new java.awt.Color(255, 255, 255));
        e2.setForeground(new java.awt.Color(255, 255, 255));
        e2.setOpaque(true);
        e2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                e2MouseClicked(evt);
            }
        });
        getContentPane().add(e2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, 60, 60));

        e1.setBackground(new java.awt.Color(0, 0, 0));
        e1.setOpaque(true);
        e1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                e1MouseClicked(evt);
            }
        });
        getContentPane().add(e1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 0, 60, 60));

        d8.setBackground(new java.awt.Color(0, 0, 0));
        d8.setOpaque(true);
        d8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d8MouseClicked(evt);
            }
        });
        getContentPane().add(d8, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 420, 60, 60));

        d7.setBackground(new java.awt.Color(255, 255, 255));
        d7.setForeground(new java.awt.Color(255, 255, 255));
        d7.setOpaque(true);
        d7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d7MouseClicked(evt);
            }
        });
        getContentPane().add(d7, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 360, 60, 60));

        d6.setBackground(new java.awt.Color(0, 0, 0));
        d6.setOpaque(true);
        d6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d6MouseClicked(evt);
            }
        });
        getContentPane().add(d6, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 300, 60, 60));

        d5.setBackground(new java.awt.Color(255, 255, 255));
        d5.setForeground(new java.awt.Color(255, 255, 255));
        d5.setOpaque(true);
        d5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d5MouseClicked(evt);
            }
        });
        getContentPane().add(d5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 240, 60, 60));

        d4.setBackground(new java.awt.Color(0, 0, 0));
        d4.setOpaque(true);
        d4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d4MouseClicked(evt);
            }
        });
        getContentPane().add(d4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 180, 60, 60));

        d3.setBackground(new java.awt.Color(255, 255, 255));
        d3.setForeground(new java.awt.Color(255, 255, 255));
        d3.setOpaque(true);
        d3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d3MouseClicked(evt);
            }
        });
        getContentPane().add(d3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 120, 60, 60));

        d2.setBackground(new java.awt.Color(0, 0, 0));
        d2.setOpaque(true);
        d2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d2MouseClicked(evt);
            }
        });
        getContentPane().add(d2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, 60, 60));

        d1.setBackground(new java.awt.Color(255, 255, 255));
        d1.setForeground(new java.awt.Color(255, 255, 255));
        d1.setOpaque(true);
        d1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d1MouseClicked(evt);
            }
        });
        getContentPane().add(d1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 60, 60));

        c8.setBackground(new java.awt.Color(255, 255, 255));
        c8.setForeground(new java.awt.Color(255, 255, 255));
        c8.setOpaque(true);
        c8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c8MouseClicked(evt);
            }
        });
        getContentPane().add(c8, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 420, 60, 60));

        c7.setBackground(new java.awt.Color(0, 0, 0));
        c7.setOpaque(true);
        c7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c7MouseClicked(evt);
            }
        });
        getContentPane().add(c7, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 360, 60, 60));

        c6.setBackground(new java.awt.Color(255, 255, 255));
        c6.setForeground(new java.awt.Color(255, 255, 255));
        c6.setOpaque(true);
        c6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c6MouseClicked(evt);
            }
        });
        getContentPane().add(c6, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 300, 60, 60));

        c5.setBackground(new java.awt.Color(0, 0, 0));
        c5.setOpaque(true);
        c5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c5MouseClicked(evt);
            }
        });
        getContentPane().add(c5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 240, 60, 60));

        c4.setBackground(new java.awt.Color(255, 255, 255));
        c4.setForeground(new java.awt.Color(255, 255, 255));
        c4.setOpaque(true);
        c4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c4MouseClicked(evt);
            }
        });
        getContentPane().add(c4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 180, 60, 60));

        c3.setBackground(new java.awt.Color(0, 0, 0));
        c3.setOpaque(true);
        c3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c3MouseClicked(evt);
            }
        });
        getContentPane().add(c3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 120, 60, 60));

        c2.setBackground(new java.awt.Color(255, 255, 255));
        c2.setForeground(new java.awt.Color(255, 255, 255));
        c2.setOpaque(true);
        c2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c2MouseClicked(evt);
            }
        });
        getContentPane().add(c2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 60, 60, 60));

        c1.setBackground(new java.awt.Color(0, 0, 0));
        c1.setOpaque(true);
        c1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c1MouseClicked(evt);
            }
        });
        getContentPane().add(c1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 60, 60));

        b8.setBackground(new java.awt.Color(0, 0, 0));
        b8.setOpaque(true);
        b8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b8MouseClicked(evt);
            }
        });
        getContentPane().add(b8, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 420, 60, 60));

        b7.setBackground(new java.awt.Color(255, 255, 255));
        b7.setForeground(new java.awt.Color(255, 255, 255));
        b7.setOpaque(true);
        b7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b7MouseClicked(evt);
            }
        });
        getContentPane().add(b7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 360, 60, 60));

        b6.setBackground(new java.awt.Color(0, 0, 0));
        b6.setOpaque(true);
        b6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b6MouseClicked(evt);
            }
        });
        getContentPane().add(b6, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 300, 60, 60));

        b5.setBackground(new java.awt.Color(255, 255, 255));
        b5.setForeground(new java.awt.Color(255, 255, 255));
        b5.setOpaque(true);
        b5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b5MouseClicked(evt);
            }
        });
        getContentPane().add(b5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 240, 60, 60));

        b4.setBackground(new java.awt.Color(0, 0, 0));
        b4.setOpaque(true);
        b4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b4MouseClicked(evt);
            }
        });
        getContentPane().add(b4, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 180, 60, 60));

        b3.setBackground(new java.awt.Color(255, 255, 255));
        b3.setForeground(new java.awt.Color(255, 255, 255));
        b3.setOpaque(true);
        b3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b3MouseClicked(evt);
            }
        });
        getContentPane().add(b3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 120, 60, 60));

        b2.setBackground(new java.awt.Color(0, 0, 0));
        b2.setOpaque(true);
        b2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b2MouseClicked(evt);
            }
        });
        getContentPane().add(b2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 60, 60, 60));

        b1.setBackground(new java.awt.Color(255, 255, 255));
        b1.setForeground(new java.awt.Color(255, 255, 255));
        b1.setOpaque(true);
        b1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b1MouseClicked(evt);
            }
        });
        getContentPane().add(b1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 0, 60, 60));

        a8.setBackground(new java.awt.Color(255, 255, 255));
        a8.setForeground(new java.awt.Color(255, 255, 255));
        a8.setOpaque(true);
        a8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a8MouseClicked(evt);
            }
        });
        getContentPane().add(a8, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 420, 60, 60));

        a7.setBackground(new java.awt.Color(0, 0, 0));
        a7.setOpaque(true);
        a7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a7MouseClicked(evt);
            }
        });
        getContentPane().add(a7, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 360, 60, 60));

        a6.setBackground(new java.awt.Color(255, 255, 255));
        a6.setForeground(new java.awt.Color(255, 255, 255));
        a6.setOpaque(true);
        a6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a6MouseClicked(evt);
            }
        });
        getContentPane().add(a6, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 300, 60, 60));

        a5.setBackground(new java.awt.Color(0, 0, 0));
        a5.setOpaque(true);
        a5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a5MouseClicked(evt);
            }
        });
        getContentPane().add(a5, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 240, 60, 60));

        a4.setBackground(new java.awt.Color(0, 0, 0));
        a4.setOpaque(true);
        a4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a4MouseClicked(evt);
            }
        });
        getContentPane().add(a4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 120, 60, 60));

        a3.setBackground(new java.awt.Color(255, 255, 255));
        a3.setForeground(new java.awt.Color(255, 255, 255));
        a3.setOpaque(true);
        a3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a3MouseClicked(evt);
            }
        });
        getContentPane().add(a3, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 180, 60, 60));

        a2.setBackground(new java.awt.Color(255, 255, 255));
        a2.setForeground(new java.awt.Color(255, 255, 255));
        a2.setOpaque(true);
        a2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a2MouseClicked(evt);
            }
        });
        getContentPane().add(a2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 60, 60, 60));

        a1.setBackground(new java.awt.Color(0, 0, 0));
        a1.setOpaque(true);
        a1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a1MouseClicked(evt);
            }
        });
        getContentPane().add(a1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 0, 60, 60));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void WhiteKnight1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteKnight1MouseMoved

    }//GEN-LAST:event_WhiteKnight1MouseMoved

    private void WhiteKnight1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteKnight1MouseEntered
        pieceMouseEntered(wk1);             
    }//GEN-LAST:event_WhiteKnight1MouseEntered

    private void WhiteKnight1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteKnight1MouseExited
        pieceMouseExited(wk1);
    }//GEN-LAST:event_WhiteKnight1MouseExited

    private void WhiteKnight1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteKnight1MouseClicked
        pieceMouseClicked(wk1,evt);
    }//GEN-LAST:event_WhiteKnight1MouseClicked

    private void WhiteKnight2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteKnight2MouseEntered
        pieceMouseEntered(wk2);
    }//GEN-LAST:event_WhiteKnight2MouseEntered

    private void WhiteKnight2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteKnight2MouseExited
        pieceMouseExited(wk2);
    }//GEN-LAST:event_WhiteKnight2MouseExited

    private void WhiteKnight2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteKnight2MouseClicked
        pieceMouseClicked(wk2,evt);
    }//GEN-LAST:event_WhiteKnight2MouseClicked

    private void a6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a6MouseClicked
        tileClicked(a6,evt);
    }//GEN-LAST:event_a6MouseClicked

    private void BlackKnight2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackKnight2MouseEntered
        pieceMouseEntered(bk2);
    }//GEN-LAST:event_BlackKnight2MouseEntered

    private void BlackKnight2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackKnight2MouseExited
        pieceMouseExited(bk2);
    }//GEN-LAST:event_BlackKnight2MouseExited

    private void BlackKnight2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackKnight2MouseClicked
        pieceMouseClicked(bk2,evt);
    }//GEN-LAST:event_BlackKnight2MouseClicked

    private void BlackKnight1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackKnight1MouseEntered
        pieceMouseEntered(bk1);
    }//GEN-LAST:event_BlackKnight1MouseEntered

    private void BlackKnight1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackKnight1MouseExited
        pieceMouseExited(bk1);
    }//GEN-LAST:event_BlackKnight1MouseExited

    private void BlackKnight1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackKnight1MouseClicked
        pieceMouseClicked(bk1,evt);
    }//GEN-LAST:event_BlackKnight1MouseClicked

    private void c6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c6MouseClicked
        tileClicked(c6,evt);
    }//GEN-LAST:event_c6MouseClicked

    private void c3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c3MouseClicked
        tileClicked(c3,evt);
    }//GEN-LAST:event_c3MouseClicked

    private void b4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b4MouseClicked
        tileClicked(b4,evt);
    }//GEN-LAST:event_b4MouseClicked

    private void d5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d5MouseClicked
        tileClicked(d5,evt); 
    }//GEN-LAST:event_d5MouseClicked

    private void f3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_f3MouseClicked
        tileClicked(f3,evt);
    }//GEN-LAST:event_f3MouseClicked

    private void e5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_e5MouseClicked
        tileClicked(e5,evt);
    }//GEN-LAST:event_e5MouseClicked

    private void h8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_h8MouseClicked
        tileClicked(h8,evt);
    }//GEN-LAST:event_h8MouseClicked

    private void h7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_h7MouseClicked
        tileClicked(h7,evt);
    }//GEN-LAST:event_h7MouseClicked

    private void h6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_h6MouseClicked
        tileClicked(h6,evt);
    }//GEN-LAST:event_h6MouseClicked

    private void h5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_h5MouseClicked
        tileClicked(h5,evt);
    }//GEN-LAST:event_h5MouseClicked

    private void h4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_h4MouseClicked
        tileClicked(h4,evt);
    }//GEN-LAST:event_h4MouseClicked

    private void h3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_h3MouseClicked
        tileClicked(h3,evt);
    }//GEN-LAST:event_h3MouseClicked

    private void h2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_h2MouseClicked
        tileClicked(h2,evt);
    }//GEN-LAST:event_h2MouseClicked

    private void h1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_h1MouseClicked
        tileClicked(h1,evt);
    }//GEN-LAST:event_h1MouseClicked

    private void g8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g8MouseClicked
        tileClicked(g8,evt);
    }//GEN-LAST:event_g8MouseClicked

    private void g7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g7MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_g7MouseEntered

    private void g7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g7MouseClicked
        tileClicked(g7,evt);
    }//GEN-LAST:event_g7MouseClicked

    private void g6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g6MouseClicked
        tileClicked(g6,evt);
    }//GEN-LAST:event_g6MouseClicked

    private void g5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g5MouseClicked
        tileClicked(g5,evt);
    }//GEN-LAST:event_g5MouseClicked

    private void g4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g4MouseClicked
        tileClicked(g4,evt);
    }//GEN-LAST:event_g4MouseClicked

    private void g3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g3MouseClicked
        tileClicked(g3,evt);
    }//GEN-LAST:event_g3MouseClicked

    private void g2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g2MouseClicked
        tileClicked(g2,evt);
    }//GEN-LAST:event_g2MouseClicked

    private void g1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g1MouseClicked
        tileClicked(g1,evt);
    }//GEN-LAST:event_g1MouseClicked

    private void f8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_f8MouseClicked
        tileClicked(f8,evt);
    }//GEN-LAST:event_f8MouseClicked

    private void f7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_f7MouseClicked
        tileClicked(f7,evt);
    }//GEN-LAST:event_f7MouseClicked

    private void f6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_f6MouseClicked
        tileClicked(f6,evt);
    }//GEN-LAST:event_f6MouseClicked

    private void f5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_f5MouseClicked
        tileClicked(f5,evt);
    }//GEN-LAST:event_f5MouseClicked

    private void f4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_f4MouseClicked
        tileClicked(f4,evt);
    }//GEN-LAST:event_f4MouseClicked

    private void f2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_f2MouseClicked
        tileClicked(f2,evt);
    }//GEN-LAST:event_f2MouseClicked

    private void f1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_f1MouseClicked
        tileClicked(f1,evt);
    }//GEN-LAST:event_f1MouseClicked

    private void e8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_e8MouseClicked
        tileClicked(e8,evt);
    }//GEN-LAST:event_e8MouseClicked

    private void e7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_e7MouseClicked
        tileClicked(e7,evt);
    }//GEN-LAST:event_e7MouseClicked

    private void e6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_e6MouseClicked
        tileClicked(e6,evt);
    }//GEN-LAST:event_e6MouseClicked

    private void e4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_e4MouseClicked
        tileClicked(e4,evt);
    }//GEN-LAST:event_e4MouseClicked

    private void e3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_e3MouseClicked
        tileClicked(e3,evt);
    }//GEN-LAST:event_e3MouseClicked

    private void e2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_e2MouseClicked
        tileClicked(e2,evt);
    }//GEN-LAST:event_e2MouseClicked

    private void e1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_e1MouseClicked
        tileClicked(e1,evt);
    }//GEN-LAST:event_e1MouseClicked

    private void d8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d8MouseClicked
        tileClicked(d8,evt);
    }//GEN-LAST:event_d8MouseClicked

    private void d7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d7MouseClicked
        tileClicked(d7,evt);
    }//GEN-LAST:event_d7MouseClicked

    private void d6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d6MouseClicked
        tileClicked(d6,evt);
    }//GEN-LAST:event_d6MouseClicked

    private void d4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d4MouseClicked
        tileClicked(d4,evt);
    }//GEN-LAST:event_d4MouseClicked

    private void d3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d3MouseClicked
        tileClicked(d3,evt);
    }//GEN-LAST:event_d3MouseClicked

    private void d2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d2MouseClicked
        tileClicked(d2,evt);
    }//GEN-LAST:event_d2MouseClicked

    private void d1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d1MouseClicked
        tileClicked(d1,evt);
    }//GEN-LAST:event_d1MouseClicked

    private void c8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c8MouseClicked
        tileClicked(c8,evt);
    }//GEN-LAST:event_c8MouseClicked

    private void c7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c7MouseClicked
        tileClicked(c7,evt);
    }//GEN-LAST:event_c7MouseClicked

    private void c5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c5MouseClicked
        tileClicked(c5,evt);
    }//GEN-LAST:event_c5MouseClicked

    private void c4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c4MouseClicked
        tileClicked(c4,evt);
    }//GEN-LAST:event_c4MouseClicked

    private void c2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c2MouseClicked
        tileClicked(c2,evt);
    }//GEN-LAST:event_c2MouseClicked

    private void c1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c1MouseClicked
        tileClicked(c1,evt);
    }//GEN-LAST:event_c1MouseClicked

    private void b8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b8MouseClicked
        tileClicked(b8,evt);
    }//GEN-LAST:event_b8MouseClicked

    private void b7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b7MouseClicked
        tileClicked(b7,evt);
    }//GEN-LAST:event_b7MouseClicked

    private void b6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b6MouseClicked
        tileClicked(b6,evt);
    }//GEN-LAST:event_b6MouseClicked

    private void b5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b5MouseClicked
        tileClicked(b5,evt);
    }//GEN-LAST:event_b5MouseClicked

    private void b3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b3MouseClicked
        tileClicked(b3,evt);
    }//GEN-LAST:event_b3MouseClicked

    private void b2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b2MouseClicked
        tileClicked(b2,evt);
    }//GEN-LAST:event_b2MouseClicked

    private void b1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b1MouseClicked
        tileClicked(b1,evt);
    }//GEN-LAST:event_b1MouseClicked

    private void a1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a1MouseClicked
        tileClicked(a1,evt);
    }//GEN-LAST:event_a1MouseClicked

    private void a2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a2MouseClicked
        tileClicked(a2,evt);
    }//GEN-LAST:event_a2MouseClicked

    private void a4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a4MouseClicked
        tileClicked(a4,evt);
    }//GEN-LAST:event_a4MouseClicked

    private void a8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a8MouseClicked
        tileClicked(a8,evt);
    }//GEN-LAST:event_a8MouseClicked

    private void a7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a7MouseClicked
        tileClicked(a7,evt);
    }//GEN-LAST:event_a7MouseClicked

    private void a5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a5MouseClicked
        tileClicked(a5,evt);
    }//GEN-LAST:event_a5MouseClicked

    private void a3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a3MouseClicked
        tileClicked(a3,evt);
    }//GEN-LAST:event_a3MouseClicked

    private void WhiteBishop1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteBishop1MouseClicked
        pieceMouseClicked(wb1,evt);
    }//GEN-LAST:event_WhiteBishop1MouseClicked

    private void WhiteRook1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteRook1MouseClicked
        pieceMouseClicked(wr1,evt);
    }//GEN-LAST:event_WhiteRook1MouseClicked

    private void WhiteBishop2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteBishop2MouseClicked
        pieceMouseClicked(wb2,evt);
    }//GEN-LAST:event_WhiteBishop2MouseClicked

    private void BlackBishop1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackBishop1MouseClicked
        pieceMouseClicked(bb1,evt);
    }//GEN-LAST:event_BlackBishop1MouseClicked

    private void BlackBishop2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackBishop2MouseClicked
        pieceMouseClicked(bb2,evt);
    }//GEN-LAST:event_BlackBishop2MouseClicked

    private void WhiteRook2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteRook2MouseClicked
        pieceMouseClicked(wr2,evt);
    }//GEN-LAST:event_WhiteRook2MouseClicked

    private void WhiteRook2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteRook2MouseEntered
        pieceMouseEntered(wr2);
    }//GEN-LAST:event_WhiteRook2MouseEntered

    private void WhiteRook2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteRook2MouseExited
        pieceMouseExited(wr2);
    }//GEN-LAST:event_WhiteRook2MouseExited

    private void BlackRook1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackRook1MouseClicked
        pieceMouseClicked(br1,evt);
    }//GEN-LAST:event_BlackRook1MouseClicked

    private void BlackRook1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackRook1MouseEntered
        pieceMouseEntered(br1);
    }//GEN-LAST:event_BlackRook1MouseEntered

    private void BlackRook1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackRook1MouseExited
        pieceMouseExited(br1);
    }//GEN-LAST:event_BlackRook1MouseExited

    private void BlackRook2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackRook2MouseClicked
        pieceMouseClicked(br2,evt);
    }//GEN-LAST:event_BlackRook2MouseClicked

    private void BlackRook2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackRook2MouseEntered
        pieceMouseEntered(br2);
    }//GEN-LAST:event_BlackRook2MouseEntered

    private void BlackRook2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackRook2MouseExited
        pieceMouseExited(br2);
    }//GEN-LAST:event_BlackRook2MouseExited

    private void WhiteQueen1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteQueen1MouseClicked
        pieceMouseClicked(wq1,evt);
    }//GEN-LAST:event_WhiteQueen1MouseClicked

    private void WhiteQueen1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteQueen1MouseEntered
        pieceMouseEntered(wq1);
    }//GEN-LAST:event_WhiteQueen1MouseEntered

    private void WhiteQueen1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteQueen1MouseExited
        pieceMouseExited(wq1);
    }//GEN-LAST:event_WhiteQueen1MouseExited

    private void BlackQueen1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackQueen1MouseClicked
        pieceMouseClicked(bq1,evt);
    }//GEN-LAST:event_BlackQueen1MouseClicked

    private void BlackQueen1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackQueen1MouseEntered
        pieceMouseEntered(bq1);
    }//GEN-LAST:event_BlackQueen1MouseEntered

    private void BlackQueen1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackQueen1MouseExited
        pieceMouseExited(bq1);
    }//GEN-LAST:event_BlackQueen1MouseExited

    private void WhitePawn1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn1MouseClicked
        pieceMouseClicked(wp1,evt);
    }//GEN-LAST:event_WhitePawn1MouseClicked

    private void WhitePawn1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn1MouseEntered
        pieceMouseEntered(wp1);
    }//GEN-LAST:event_WhitePawn1MouseEntered

    private void WhitePawn1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn1MouseExited
        pieceMouseExited(wp1);
    }//GEN-LAST:event_WhitePawn1MouseExited

    private void WhitePawn2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn2MouseClicked
        pieceMouseClicked(wp2,evt);
    }//GEN-LAST:event_WhitePawn2MouseClicked

    private void WhitePawn2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn2MouseEntered
        pieceMouseEntered(wp2);
    }//GEN-LAST:event_WhitePawn2MouseEntered

    private void WhitePawn2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn2MouseExited
        pieceMouseExited(wp2);
    }//GEN-LAST:event_WhitePawn2MouseExited

    private void WhitePawn3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn3MouseClicked
        pieceMouseClicked(wp3,evt);
    }//GEN-LAST:event_WhitePawn3MouseClicked

    private void WhitePawn3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn3MouseEntered
        pieceMouseEntered(wp3);
    }//GEN-LAST:event_WhitePawn3MouseEntered

    private void WhitePawn3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn3MouseExited
        pieceMouseExited(wp3);
    }//GEN-LAST:event_WhitePawn3MouseExited

    private void WhitePawn4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn4MouseClicked
        pieceMouseClicked(wp4,evt);
    }//GEN-LAST:event_WhitePawn4MouseClicked

    private void WhitePawn4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn4MouseEntered
        pieceMouseEntered(wp4);
    }//GEN-LAST:event_WhitePawn4MouseEntered

    private void WhitePawn4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn4MouseExited
        pieceMouseExited(wp4);
    }//GEN-LAST:event_WhitePawn4MouseExited

    private void WhitePawn5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn5MouseClicked
        pieceMouseClicked(wp5,evt);
    }//GEN-LAST:event_WhitePawn5MouseClicked

    private void WhitePawn5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn5MouseEntered
        pieceMouseEntered(wp5);
    }//GEN-LAST:event_WhitePawn5MouseEntered

    private void WhitePawn5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn5MouseExited
        pieceMouseExited(wp5);
    }//GEN-LAST:event_WhitePawn5MouseExited

    private void WhitePawn6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn6MouseClicked
        pieceMouseClicked(wp6,evt);
    }//GEN-LAST:event_WhitePawn6MouseClicked

    private void WhitePawn6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn6MouseEntered
        pieceMouseEntered(wp6);
    }//GEN-LAST:event_WhitePawn6MouseEntered

    private void WhitePawn6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn6MouseExited
        pieceMouseExited(wp6);
    }//GEN-LAST:event_WhitePawn6MouseExited

    private void WhitePawn7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn7MouseClicked
        pieceMouseClicked(wp7,evt);
    }//GEN-LAST:event_WhitePawn7MouseClicked

    private void WhitePawn7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn7MouseEntered
        pieceMouseEntered(wp7);
    }//GEN-LAST:event_WhitePawn7MouseEntered

    private void WhitePawn7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn7MouseExited
        pieceMouseExited(wp7);
    }//GEN-LAST:event_WhitePawn7MouseExited

    private void WhitePawn8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn8MouseClicked
        pieceMouseClicked(wp8,evt);
    }//GEN-LAST:event_WhitePawn8MouseClicked

    private void WhitePawn8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn8MouseEntered
        pieceMouseEntered(wp8);
    }//GEN-LAST:event_WhitePawn8MouseEntered

    private void WhitePawn8MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn8MouseExited
        pieceMouseExited(wp8);
    }//GEN-LAST:event_WhitePawn8MouseExited

    private void BlackPawn1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn1MouseClicked
        pieceMouseClicked(bp1,evt);
    }//GEN-LAST:event_BlackPawn1MouseClicked

    private void BlackPawn1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn1MouseEntered
        pieceMouseEntered(bp1);
    }//GEN-LAST:event_BlackPawn1MouseEntered

    private void BlackPawn1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn1MouseExited
        pieceMouseExited(bp1);
    }//GEN-LAST:event_BlackPawn1MouseExited

    private void BlackPawn2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn2MouseClicked
        pieceMouseClicked(bp2,evt);
    }//GEN-LAST:event_BlackPawn2MouseClicked

    private void BlackPawn2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn2MouseEntered
        pieceMouseEntered(bp2);
    }//GEN-LAST:event_BlackPawn2MouseEntered

    private void BlackPawn2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn2MouseExited
        pieceMouseExited(bp2);
    }//GEN-LAST:event_BlackPawn2MouseExited

    private void BlackPawn3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn3MouseClicked
        pieceMouseClicked(bp3,evt);
    }//GEN-LAST:event_BlackPawn3MouseClicked

    private void BlackPawn3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn3MouseEntered
        pieceMouseEntered(bp3);
    }//GEN-LAST:event_BlackPawn3MouseEntered

    private void BlackPawn3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn3MouseExited
        pieceMouseExited(bp3);
    }//GEN-LAST:event_BlackPawn3MouseExited

    private void BlackPawn4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn4MouseClicked
        pieceMouseClicked(bp4,evt);
    }//GEN-LAST:event_BlackPawn4MouseClicked

    private void BlackPawn4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn4MouseEntered
        pieceMouseEntered(bp4);
    }//GEN-LAST:event_BlackPawn4MouseEntered

    private void BlackPawn4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn4MouseExited
        pieceMouseExited(bp4);
    }//GEN-LAST:event_BlackPawn4MouseExited

    private void BlackPawn5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn5MouseClicked
        pieceMouseClicked(bp5,evt);
    }//GEN-LAST:event_BlackPawn5MouseClicked

    private void BlackPawn5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn5MouseEntered
        pieceMouseEntered(bp5);
    }//GEN-LAST:event_BlackPawn5MouseEntered

    private void BlackPawn5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn5MouseExited
        pieceMouseExited(bp5);
    }//GEN-LAST:event_BlackPawn5MouseExited

    private void BlackPawn6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn6MouseClicked
        pieceMouseClicked(bp6,evt);
    }//GEN-LAST:event_BlackPawn6MouseClicked

    private void BlackPawn6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn6MouseEntered
        pieceMouseEntered(bp6);
    }//GEN-LAST:event_BlackPawn6MouseEntered

    private void BlackPawn6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn6MouseExited
        pieceMouseExited(bp6);
    }//GEN-LAST:event_BlackPawn6MouseExited

    private void BlackPawn7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn7MouseClicked
        pieceMouseClicked(bp7,evt);
    }//GEN-LAST:event_BlackPawn7MouseClicked

    private void BlackPawn7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn7MouseEntered
        pieceMouseEntered(bp7);
    }//GEN-LAST:event_BlackPawn7MouseEntered

    private void BlackPawn7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn7MouseExited
        pieceMouseExited(bp7);
    }//GEN-LAST:event_BlackPawn7MouseExited

    private void BlackPawn8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn8MouseClicked
        pieceMouseClicked(bp8,evt);
    }//GEN-LAST:event_BlackPawn8MouseClicked

    private void BlackPawn8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn8MouseEntered
        pieceMouseEntered(bp8);
    }//GEN-LAST:event_BlackPawn8MouseEntered

    private void BlackPawn8MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn8MouseExited
        pieceMouseExited(bp8);
    }//GEN-LAST:event_BlackPawn8MouseExited

    private void WhiteKingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteKingMouseClicked
        this.pieceMouseClicked(wk,evt);
    }//GEN-LAST:event_WhiteKingMouseClicked

    private void WhiteKingMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteKingMouseEntered
        pieceMouseEntered(wk);
    }//GEN-LAST:event_WhiteKingMouseEntered

    private void WhiteKingMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteKingMouseExited
        pieceMouseExited(wk);
    }//GEN-LAST:event_WhiteKingMouseExited

    private void BlackKingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackKingMouseClicked
        pieceMouseClicked(bk,evt);
    }//GEN-LAST:event_BlackKingMouseClicked

    private void BlackKingMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackKingMouseEntered
        pieceMouseEntered(bk);
    }//GEN-LAST:event_BlackKingMouseEntered

    private void BlackKingMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackKingMouseExited
        pieceMouseExited(bk);
    }//GEN-LAST:event_BlackKingMouseExited

    private void WhiteBishop1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteBishop1MouseEntered
        pieceMouseEntered(wb1);
    }//GEN-LAST:event_WhiteBishop1MouseEntered

    private void WhiteBishop2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteBishop2MouseEntered
        pieceMouseEntered(wb2);
    }//GEN-LAST:event_WhiteBishop2MouseEntered

    private void WhiteBishop1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteBishop1MouseExited
        pieceMouseExited(wb1);
    }//GEN-LAST:event_WhiteBishop1MouseExited

    private void WhiteBishop2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteBishop2MouseExited
        pieceMouseExited(wb2);
    }//GEN-LAST:event_WhiteBishop2MouseExited

    private void BlackBishop1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackBishop1MouseEntered
        pieceMouseEntered(bb1);
    }//GEN-LAST:event_BlackBishop1MouseEntered

    private void BlackBishop1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackBishop1MouseExited
        pieceMouseExited(bb1);
    }//GEN-LAST:event_BlackBishop1MouseExited

    private void BlackBishop2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackBishop2MouseEntered
        pieceMouseEntered(bb2);
    }//GEN-LAST:event_BlackBishop2MouseEntered

    private void BlackBishop2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackBishop2MouseExited
        pieceMouseExited(bb2);
    }//GEN-LAST:event_BlackBishop2MouseExited

    private void WhiteKnight1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteKnight1MousePressed
        PieceMousePressed(wk1,evt);
    }//GEN-LAST:event_WhiteKnight1MousePressed

    private void WhiteKnight1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteKnight1MouseDragged
        PieceMouseDrag(wk1,evt);
    }//GEN-LAST:event_WhiteKnight1MouseDragged

    private void WhiteKnight1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteKnight1MouseReleased
        PieceMouseReleased(wk1,evt);
    }//GEN-LAST:event_WhiteKnight1MouseReleased

    private void WhiteRook2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteRook2MousePressed
        PieceMousePressed(wr2,evt);
    }//GEN-LAST:event_WhiteRook2MousePressed

    private void WhiteRook2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteRook2MouseDragged
        PieceMouseDrag(wr2,evt);
    }//GEN-LAST:event_WhiteRook2MouseDragged

    private void WhiteRook2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteRook2MouseReleased
        PieceMouseReleased(wr2,evt);
    }//GEN-LAST:event_WhiteRook2MouseReleased

    private void WhiteKnight2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteKnight2MousePressed
        PieceMousePressed(wk2,evt);
    }//GEN-LAST:event_WhiteKnight2MousePressed

    private void WhiteKnight2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteKnight2MouseDragged
        PieceMouseDrag(wk2,evt);
    }//GEN-LAST:event_WhiteKnight2MouseDragged

    private void WhiteKnight2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteKnight2MouseReleased
        PieceMouseReleased(wk2,evt);
    }//GEN-LAST:event_WhiteKnight2MouseReleased

    private void WhiteBishop2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteBishop2MousePressed
        PieceMousePressed(wb2,evt);
    }//GEN-LAST:event_WhiteBishop2MousePressed

    private void WhiteBishop2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteBishop2MouseDragged
        PieceMouseDrag(wb2,evt);
    }//GEN-LAST:event_WhiteBishop2MouseDragged

    private void WhiteBishop2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteBishop2MouseReleased
        PieceMouseReleased(wb2,evt);
    }//GEN-LAST:event_WhiteBishop2MouseReleased

    private void WhiteQueen1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteQueen1MousePressed
        PieceMousePressed(wq1,evt);
    }//GEN-LAST:event_WhiteQueen1MousePressed

    private void WhiteQueen1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteQueen1MouseDragged
        PieceMouseDrag(wq1,evt);
    }//GEN-LAST:event_WhiteQueen1MouseDragged

    private void WhiteQueen1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteQueen1MouseReleased
        PieceMouseReleased(wq1,evt);
    }//GEN-LAST:event_WhiteQueen1MouseReleased

    private void WhiteKingMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteKingMousePressed
        PieceMousePressed(wk,evt);
    }//GEN-LAST:event_WhiteKingMousePressed

    private void WhiteKingMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteKingMouseDragged
        PieceMouseDrag(wk,evt);
    }//GEN-LAST:event_WhiteKingMouseDragged

    private void WhiteKingMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteKingMouseReleased
        PieceMouseReleased(wk,evt);
    }//GEN-LAST:event_WhiteKingMouseReleased

    private void WhiteBishop1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteBishop1MousePressed
        PieceMousePressed(wb1,evt);
    }//GEN-LAST:event_WhiteBishop1MousePressed

    private void WhiteBishop1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteBishop1MouseDragged
        PieceMouseDrag(wb1,evt);
    }//GEN-LAST:event_WhiteBishop1MouseDragged

    private void WhiteBishop1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteBishop1MouseReleased
        PieceMouseReleased(wb1,evt);
    }//GEN-LAST:event_WhiteBishop1MouseReleased

    private void WhiteRook1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteRook1MousePressed
        PieceMousePressed(wr1,evt);
    }//GEN-LAST:event_WhiteRook1MousePressed

    private void WhiteRook1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteRook1MouseReleased
        PieceMouseReleased(wr1,evt);
    }//GEN-LAST:event_WhiteRook1MouseReleased

    private void WhiteRook1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhiteRook1MouseDragged
        PieceMouseDrag(wr1,evt);
    }//GEN-LAST:event_WhiteRook1MouseDragged

    private void WhitePawn8MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn8MousePressed
        PieceMousePressed(wp8,evt);
    }//GEN-LAST:event_WhitePawn8MousePressed

    private void WhitePawn8MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn8MouseDragged
        PieceMouseDrag(wp8,evt);
    }//GEN-LAST:event_WhitePawn8MouseDragged

    private void WhitePawn8MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn8MouseReleased
        PieceMouseReleased(wp8,evt);
    }//GEN-LAST:event_WhitePawn8MouseReleased

    private void WhitePawn7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn7MousePressed
        PieceMousePressed(wp7,evt);
    }//GEN-LAST:event_WhitePawn7MousePressed

    private void WhitePawn7MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn7MouseDragged
        PieceMouseDrag(wp7,evt);
    }//GEN-LAST:event_WhitePawn7MouseDragged

    private void WhitePawn7MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn7MouseReleased
        PieceMouseReleased(wp7,evt);
    }//GEN-LAST:event_WhitePawn7MouseReleased

    private void WhitePawn6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn6MousePressed
        PieceMousePressed(wp6,evt);
    }//GEN-LAST:event_WhitePawn6MousePressed

    private void WhitePawn6MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn6MouseDragged
        PieceMouseDrag(wp6,evt);
    }//GEN-LAST:event_WhitePawn6MouseDragged

    private void WhitePawn6MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn6MouseReleased
        PieceMouseReleased(wp6,evt);
    }//GEN-LAST:event_WhitePawn6MouseReleased

    private void WhitePawn5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn5MousePressed
        PieceMousePressed(wp5,evt);
    }//GEN-LAST:event_WhitePawn5MousePressed

    private void WhitePawn5MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn5MouseDragged
        PieceMouseDrag(wp5,evt);
    }//GEN-LAST:event_WhitePawn5MouseDragged

    private void WhitePawn5MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn5MouseReleased
        PieceMouseReleased(wp5,evt);
    }//GEN-LAST:event_WhitePawn5MouseReleased

    private void WhitePawn4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn4MousePressed
        PieceMousePressed(wp4,evt);
    }//GEN-LAST:event_WhitePawn4MousePressed

    private void WhitePawn4MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn4MouseDragged
        PieceMouseDrag(wp4,evt);
    }//GEN-LAST:event_WhitePawn4MouseDragged

    private void WhitePawn4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn4MouseReleased
        PieceMouseReleased(wp4,evt);
    }//GEN-LAST:event_WhitePawn4MouseReleased

    private void WhitePawn3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn3MousePressed
        PieceMousePressed(wp3,evt);
    }//GEN-LAST:event_WhitePawn3MousePressed

    private void WhitePawn3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn3MouseDragged
        PieceMouseDrag(wp3,evt);
    }//GEN-LAST:event_WhitePawn3MouseDragged

    private void WhitePawn3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn3MouseReleased
        PieceMouseReleased(wp3,evt);
    }//GEN-LAST:event_WhitePawn3MouseReleased

    private void WhitePawn2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn2MousePressed
        PieceMousePressed(wp2,evt);
    }//GEN-LAST:event_WhitePawn2MousePressed

    private void WhitePawn2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn2MouseDragged
        PieceMouseDrag(wp2,evt);
    }//GEN-LAST:event_WhitePawn2MouseDragged

    private void WhitePawn2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn2MouseReleased
        PieceMouseReleased(wp2,evt);
    }//GEN-LAST:event_WhitePawn2MouseReleased

    private void WhitePawn1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn1MousePressed
        PieceMousePressed(wp1,evt);
    }//GEN-LAST:event_WhitePawn1MousePressed

    private void WhitePawn1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn1MouseDragged
        PieceMouseDrag(wp1,evt);
    }//GEN-LAST:event_WhitePawn1MouseDragged

    private void WhitePawn1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WhitePawn1MouseReleased
        PieceMouseReleased(wp1,evt);
    }//GEN-LAST:event_WhitePawn1MouseReleased

    private void BlackPawn1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn1MousePressed
        PieceMousePressed(bp1,evt);
    }//GEN-LAST:event_BlackPawn1MousePressed

    private void BlackPawn1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn1MouseDragged
        PieceMouseDrag(bp1,evt);
    }//GEN-LAST:event_BlackPawn1MouseDragged

    private void BlackPawn1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn1MouseReleased
        PieceMouseReleased(bp1,evt);
    }//GEN-LAST:event_BlackPawn1MouseReleased

    private void BlackPawn2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn2MousePressed
        PieceMousePressed(bp2,evt);
    }//GEN-LAST:event_BlackPawn2MousePressed

    private void BlackPawn2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn2MouseDragged
        PieceMouseDrag(bp2,evt);
    }//GEN-LAST:event_BlackPawn2MouseDragged

    private void BlackPawn2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn2MouseReleased
        PieceMouseReleased(bp2,evt);
    }//GEN-LAST:event_BlackPawn2MouseReleased

    private void BlackPawn3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn3MousePressed
        PieceMousePressed(bp3,evt);
    }//GEN-LAST:event_BlackPawn3MousePressed

    private void BlackPawn3MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn3MouseDragged
        PieceMouseDrag(bp3,evt);
    }//GEN-LAST:event_BlackPawn3MouseDragged

    private void BlackPawn3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn3MouseReleased
        PieceMouseReleased(bp3,evt);
    }//GEN-LAST:event_BlackPawn3MouseReleased

    private void BlackPawn4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn4MousePressed
        PieceMousePressed(bp4,evt);
    }//GEN-LAST:event_BlackPawn4MousePressed

    private void BlackPawn4MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn4MouseDragged
        PieceMouseDrag(bp4,evt);
    }//GEN-LAST:event_BlackPawn4MouseDragged

    private void BlackPawn4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn4MouseReleased
        PieceMouseReleased(bp4,evt);
    }//GEN-LAST:event_BlackPawn4MouseReleased

    private void BlackPawn5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn5MousePressed
        PieceMousePressed(bp5,evt);
    }//GEN-LAST:event_BlackPawn5MousePressed

    private void BlackPawn5MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn5MouseDragged
        PieceMouseDrag(bp5,evt);
    }//GEN-LAST:event_BlackPawn5MouseDragged

    private void BlackPawn5MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn5MouseReleased
        PieceMouseReleased(bp5,evt);
    }//GEN-LAST:event_BlackPawn5MouseReleased

    private void BlackPawn6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn6MousePressed
        PieceMousePressed(bp6,evt);
    }//GEN-LAST:event_BlackPawn6MousePressed

    private void BlackPawn6MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn6MouseDragged
        PieceMouseDrag(bp6,evt);
    }//GEN-LAST:event_BlackPawn6MouseDragged

    private void BlackPawn6MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn6MouseReleased
        PieceMouseReleased(bp6,evt);
    }//GEN-LAST:event_BlackPawn6MouseReleased

    private void BlackPawn7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn7MousePressed
        PieceMousePressed(bp7,evt);
    }//GEN-LAST:event_BlackPawn7MousePressed

    private void BlackPawn7MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn7MouseDragged
        PieceMouseDrag(bp7,evt);
    }//GEN-LAST:event_BlackPawn7MouseDragged

    private void BlackPawn7MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn7MouseReleased
        PieceMouseReleased(bp7,evt);
    }//GEN-LAST:event_BlackPawn7MouseReleased

    private void BlackPawn8MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn8MousePressed
        PieceMousePressed(bp8,evt);
    }//GEN-LAST:event_BlackPawn8MousePressed

    private void BlackPawn8MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn8MouseDragged
        PieceMouseDrag(bp8,evt);
    }//GEN-LAST:event_BlackPawn8MouseDragged

    private void BlackPawn8MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackPawn8MouseReleased
        PieceMouseReleased(bp8,evt);
    }//GEN-LAST:event_BlackPawn8MouseReleased

    private void BlackRook1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackRook1MousePressed
        PieceMousePressed(br1,evt);
    }//GEN-LAST:event_BlackRook1MousePressed

    private void BlackRook1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackRook1MouseDragged
        PieceMouseDrag(br1,evt);
    }//GEN-LAST:event_BlackRook1MouseDragged

    private void BlackRook1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackRook1MouseReleased
        PieceMouseReleased(br1,evt);
    }//GEN-LAST:event_BlackRook1MouseReleased

    private void BlackKnight1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackKnight1MousePressed
        PieceMousePressed(bk1,evt);
    }//GEN-LAST:event_BlackKnight1MousePressed

    private void BlackKnight1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackKnight1MouseDragged
        PieceMouseDrag(bk1,evt);
    }//GEN-LAST:event_BlackKnight1MouseDragged

    private void BlackKnight1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackKnight1MouseReleased
        PieceMouseReleased(bk1,evt);
    }//GEN-LAST:event_BlackKnight1MouseReleased

    private void BlackBishop1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackBishop1MousePressed
        PieceMousePressed(bb1,evt);
    }//GEN-LAST:event_BlackBishop1MousePressed

    private void BlackBishop1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackBishop1MouseDragged
        PieceMouseDrag(bb1,evt);
    }//GEN-LAST:event_BlackBishop1MouseDragged

    private void BlackBishop1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackBishop1MouseReleased
        PieceMouseReleased(bb1,evt);
    }//GEN-LAST:event_BlackBishop1MouseReleased

    private void BlackKingMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackKingMousePressed
        PieceMousePressed(bk,evt);
    }//GEN-LAST:event_BlackKingMousePressed

    private void BlackKingMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackKingMouseDragged
        PieceMouseDrag(bk,evt);
    }//GEN-LAST:event_BlackKingMouseDragged

    private void BlackKingMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackKingMouseReleased
        PieceMouseReleased(bk,evt);
    }//GEN-LAST:event_BlackKingMouseReleased

    private void BlackQueen1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackQueen1MousePressed
        PieceMousePressed(bq1,evt);
    }//GEN-LAST:event_BlackQueen1MousePressed

    private void BlackQueen1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackQueen1MouseDragged
        PieceMouseDrag(bq1,evt);
    }//GEN-LAST:event_BlackQueen1MouseDragged

    private void BlackQueen1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackQueen1MouseReleased
        PieceMouseReleased(bq1,evt);
    }//GEN-LAST:event_BlackQueen1MouseReleased

    private void BlackBishop2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackBishop2MousePressed
        PieceMousePressed(bb2,evt);
    }//GEN-LAST:event_BlackBishop2MousePressed

    private void BlackBishop2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackBishop2MouseDragged
        PieceMouseDrag(bb2,evt);
    }//GEN-LAST:event_BlackBishop2MouseDragged

    private void BlackBishop2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackBishop2MouseReleased
        PieceMouseReleased(bb2,evt);
    }//GEN-LAST:event_BlackBishop2MouseReleased

    private void BlackKnight2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackKnight2MousePressed
        PieceMousePressed(bk2,evt);
    }//GEN-LAST:event_BlackKnight2MousePressed

    private void BlackKnight2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackKnight2MouseDragged
        PieceMouseDrag(bk2,evt);
    }//GEN-LAST:event_BlackKnight2MouseDragged

    private void BlackKnight2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackKnight2MouseReleased
        PieceMouseReleased(bk2,evt);
    }//GEN-LAST:event_BlackKnight2MouseReleased

    private void BlackRook2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackRook2MousePressed
        PieceMousePressed(br2,evt);
    }//GEN-LAST:event_BlackRook2MousePressed

    private void BlackRook2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackRook2MouseDragged
        PieceMouseDrag(br2,evt);
    }//GEN-LAST:event_BlackRook2MouseDragged

    private void BlackRook2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BlackRook2MouseReleased
        PieceMouseReleased(br2,evt);
    }//GEN-LAST:event_BlackRook2MouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameScreenBlack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new GameScreenBlack().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BlackBishop1;
    private javax.swing.JLabel BlackBishop2;
    private javax.swing.JLabel BlackKing;
    private javax.swing.JLabel BlackKnight1;
    private javax.swing.JLabel BlackKnight2;
    private javax.swing.JLabel BlackPawn1;
    private javax.swing.JLabel BlackPawn2;
    private javax.swing.JLabel BlackPawn3;
    private javax.swing.JLabel BlackPawn4;
    private javax.swing.JLabel BlackPawn5;
    private javax.swing.JLabel BlackPawn6;
    private javax.swing.JLabel BlackPawn7;
    private javax.swing.JLabel BlackPawn8;
    private javax.swing.JLabel BlackQueen1;
    private javax.swing.JLabel BlackRook1;
    private javax.swing.JLabel BlackRook2;
    private javax.swing.JLabel JustForNullPiece;
    private javax.swing.JLabel WhiteBishop1;
    private javax.swing.JLabel WhiteBishop2;
    private javax.swing.JLabel WhiteKing;
    private javax.swing.JLabel WhiteKnight1;
    private javax.swing.JLabel WhiteKnight2;
    private javax.swing.JLabel WhitePawn1;
    private javax.swing.JLabel WhitePawn2;
    private javax.swing.JLabel WhitePawn3;
    private javax.swing.JLabel WhitePawn4;
    private javax.swing.JLabel WhitePawn5;
    private javax.swing.JLabel WhitePawn6;
    private javax.swing.JLabel WhitePawn7;
    private javax.swing.JLabel WhitePawn8;
    private javax.swing.JLabel WhiteQueen1;
    private javax.swing.JLabel WhiteRook1;
    private javax.swing.JLabel WhiteRook2;
    private javax.swing.JLabel a1;
    private javax.swing.JLabel a2;
    private javax.swing.JLabel a3;
    private javax.swing.JLabel a4;
    private javax.swing.JLabel a5;
    private javax.swing.JLabel a6;
    private javax.swing.JLabel a7;
    private javax.swing.JLabel a8;
    private javax.swing.JLabel b1;
    private javax.swing.JLabel b2;
    private javax.swing.JLabel b3;
    private javax.swing.JLabel b4;
    private javax.swing.JLabel b5;
    private javax.swing.JLabel b6;
    private javax.swing.JLabel b7;
    private javax.swing.JLabel b8;
    private javax.swing.JLabel c1;
    private javax.swing.JLabel c2;
    private javax.swing.JLabel c3;
    private javax.swing.JLabel c4;
    private javax.swing.JLabel c5;
    private javax.swing.JLabel c6;
    private javax.swing.JLabel c7;
    private javax.swing.JLabel c8;
    private javax.swing.JLabel d1;
    private javax.swing.JLabel d2;
    private javax.swing.JLabel d3;
    private javax.swing.JLabel d4;
    private javax.swing.JLabel d5;
    private javax.swing.JLabel d6;
    private javax.swing.JLabel d7;
    private javax.swing.JLabel d8;
    private javax.swing.JLabel e1;
    private javax.swing.JLabel e2;
    private javax.swing.JLabel e3;
    private javax.swing.JLabel e4;
    private javax.swing.JLabel e5;
    private javax.swing.JLabel e6;
    private javax.swing.JLabel e7;
    private javax.swing.JLabel e8;
    private javax.swing.JLabel f1;
    private javax.swing.JLabel f2;
    private javax.swing.JLabel f3;
    private javax.swing.JLabel f4;
    private javax.swing.JLabel f5;
    private javax.swing.JLabel f6;
    private javax.swing.JLabel f7;
    private javax.swing.JLabel f8;
    private javax.swing.JLabel g1;
    private javax.swing.JLabel g2;
    private javax.swing.JLabel g3;
    private javax.swing.JLabel g4;
    private javax.swing.JLabel g5;
    private javax.swing.JLabel g6;
    private javax.swing.JLabel g7;
    private javax.swing.JLabel g8;
    private javax.swing.JLabel h1;
    private javax.swing.JLabel h2;
    private javax.swing.JLabel h3;
    private javax.swing.JLabel h4;
    private javax.swing.JLabel h5;
    private javax.swing.JLabel h6;
    private javax.swing.JLabel h7;
    private javax.swing.JLabel h8;
    // End of variables declaration//GEN-END:variables

    public Tile PieceTile(JLabel Piece)
    {
        Tile a=Tile.a1;
        for(tile t:tiles)
        {
            if(Piece.getX()==t.getX()&&Piece.getY()==t.getY())
            {
                a=t.getTile();
                break;
            }
        }
        return a;
    }
    public JLabel getTileInJlabel(Tile check)
    {
        JLabel a=h8;
        for(tile t:tiles)
        {
            if(check==t.getTile())
            {
                a=t.getLabel();
                break;
            }
        }
        return a;
    }
    public piece getPieceInTile(int tileCoordinate)
    {
        JLabel label=PieceInTile(getTileInJlabel(tileStatus.getTile(tileCoordinate)));
        piece result=new piece(JustForNullPiece,this);
        for(piece p:pieces)
        {
            if(p.getJLabel().equals(label))
            {
                result=p;
                break;
            }
        }
        return result;
    }
    private void resetAllTileColor()
    {
        for(tile t:tiles)
        {
            t.setBackground();
        }
        repaint();
    }
    private void resetAllPieceImage(JLabel a)
    {
        for(piece p:pieces)
        {
            if(p.getJLabel().equals(a)==false)
            {
                p.setJLabel("");
            }
        }
    }
    
    //Creates an image icon referring to given path of required size
    private ImageIcon getImageIcon(String path)
    {
        ImageIcon icon=new ImageIcon(getClass().getResource(path));
        Image img=icon.getImage();
        Image imgScale=img.getScaledInstance(60, 60, Image.SCALE_SMOOTH);
        ImageIcon ico=new ImageIcon(imgScale);
        return ico;
    }
    
    //Returns an image icon based on the given image name
    //Example: giving input: "white knight" makes it return the white knight icon of correct size
    public ImageIcon to(String imageName)
    {
        return getImageIcon("/Images/"+imageName+".png");
    }
    private JLabel PieceClicked()
    {
        JLabel a=h8;
        for(piece p:pieces)
        {
            if(p.getClicked())
            {
                a=p.getJLabel();
                break;
            }
        }
        return a;
    }
    private void resetPieceClicked()
    {
        for(piece p:pieces)
        {
            p.setClicked(false);
        }
    }
    private void resetEnPassant()
    {
        for(piece p:pieces)
        {
            p.setEnPassant(false);
        }
    }
    private void repaintAllPieces()
    {
        for(piece p:pieces)
        {
            p.getJLabel().repaint();
        }
    }
    private void capture(piece p)
    {
        p.getJLabel().move(6000, 6000);
    }
    public JLabel PieceInTile(JLabel tile)
    {
        JLabel a=h1;
        for(piece p:pieces)
        {
            if(tile.getX()==p.getJLabel().getX() && tile.getY()==p.getJLabel().getY())
            {
                a=p.getJLabel();
                break;
            }
        }
        return a;
    }
    public int turnCheckerReturner()
    {
        return TurnChecker;
    }
    public boolean friendlyPiecePresent(int tileCoordinate)
    {
        boolean a=false;
        if(PieceInTile(getTileInJlabel(tileStatus.getTile(tileCoordinate))).getText().startsWith("White")&&TurnChecker==1)
            a=true;
        else if(PieceInTile(getTileInJlabel(tileStatus.getTile(tileCoordinate))).getText().startsWith("Black")&&TurnChecker==-1)
            a=true;
        return a;
    }
    public boolean opposingPiecePresent(int tileCoordinate)
    {
        boolean a=false;
        if(PieceInTile(getTileInJlabel(tileStatus.getTile(tileCoordinate))).getText().startsWith("White")&&TurnChecker==-1)
            a=true;
        else if(PieceInTile(getTileInJlabel(tileStatus.getTile(tileCoordinate))).getText().startsWith("Black")&&TurnChecker==1)
            a=true;
        return a;
    }
    public tile getTileFromLabel(JLabel tile)
    {
        tile result=new tile(h8,Tile.a1);
        for(tile t:tiles)
        {
            if(t.getLabel().equals(tile))
            {
                result=t;
            }
        }
        return result;
    }
    public piece getPieceFromLabel(JLabel pieceLabel)
    {
        piece result=new piece(WhiteKnight1,this);
        for(piece p:pieces)
        {
            if(p.getJLabel().equals(pieceLabel))
            {
                result=p;
                break;
            }
        }
        return result;
    }
    private void pieceMouseEntered(piece p)
    {
        if(p.getClicked()==false){
            
        }             
    }
    private void pieceMouseExited(piece p)
    {
        if(p.getClicked()==false){
            p.setJLabel("");
        }             
    }
    private void pieceMouseClicked(piece p,java.awt.event.MouseEvent evt)
    {
        if(SwingUtilities.isLeftMouseButton(evt))
        {
            if(p.checkTurn() && AI==false) 
            {
                resetAllTileColor();
                resetPieceClicked();
                repaintAllPieces();
                p.setTileCoordinate();
                p.setClicked(true);
                resetAllPieceImage(p.getJLabel());
                p.setJLabel("clicked");
                p.setLegalTiles();
                p.colorLegalTiles();

            }
            else if(p.checkTurn() && AI)
            {
                if(pc.equals("CPU2") && TurnChecker==1)
                {
                    resetAllTileColor();
                    resetPieceClicked();
                    repaintAllPieces();
                    p.setTileCoordinate();
                    p.setClicked(true);
                    resetAllPieceImage(p.getJLabel());
                    p.setJLabel("clicked");
                    p.setLegalTiles();
                    p.colorLegalTiles();
                }
            }
            else
            {
                if(getTileInJlabel(PieceTile(p.getJLabel())).getBackground().equals(Color.GREEN))
                {
                    int X=getTileInJlabel(PieceTile(p.getJLabel())).getX();
                    int Y=getTileInJlabel(PieceTile(p.getJLabel())).getY();
                    if(getPieceFromLabel(PieceClicked()).getType().equals("Pawn"))
                    {
                        int j=p.getTileCoordinate();
                        //checking whether pawn can be promoted
                        if((TurnChecker==1&&j>=0&&j<8)||(TurnChecker==-1&&j>55&&j<64))
                        {
                            getPieceFromLabel(PieceClicked()).promote();
                        }
                    }
                    TurnChecker*=(-1); 
                    p.getJLabel().move(6000,6000);
                    p.setCaptured();
                    PieceClicked().move(X,Y);
                    if(AI)
                        AI();
                }
                resetPieceClicked();
                resetAllPieceImage(h1);
                resetAllTileColor();
                if(check())
                {
                    Component frame=null;
                    JOptionPane.showMessageDialog(frame, "Check");
                }
            } 
        }
        else if(SwingUtilities.isRightMouseButton(evt))
        {
            p.setTileCoordinate();
            if(getTileInJlabel(tileStatus.getTile(p.getTileCoordinate())).getBackground().equals(Color.RED)==false)
            {
                getTileInJlabel(tileStatus.getTile(p.getTileCoordinate())).setBackground(Color.RED);
                repaint();
            }
            else
            {
                getTileFromLabel(getTileInJlabel(tileStatus.getTile(p.getTileCoordinate()))).setBackground();
                repaint();
            }
        }
    }
    private void tileClicked(JLabel tLabel,java.awt.event.MouseEvent evt)
    {
        tile t=getTileFromLabel(tLabel);
        if(SwingUtilities.isLeftMouseButton(evt)){
        int initialTileCoordinate,finalTileCoordinate;
            
        boolean a=false;//this variable is used to do the castles and not intefere with normal movement cause I have dealt Movement and animation inside the cases
        
        if(t.getLabel().getBackground().equals(Color.GREEN))
        {
            initialTileCoordinate=getPieceFromLabel(PieceClicked()).getTileCoordinate();
            //checking for pawn
            switch (getPieceFromLabel(PieceClicked()).getType())
            /*Changed it to switch cause of warnings.
            I have createdKing case and Rook*/
            {
                case "Pawn":
                    int i=getPieceFromLabel(PieceClicked()).getTileCoordinate(),j=t.getTileCoordinate();
                    //checking whether this pawn can do en passant on another pawn
                    piece p=new piece(WhiteKnight1,this);
                    if(TurnChecker==1&&(tileStatus.left(i,j)||tileStatus.right(i,j)))
                    {
                        p=getPieceInTile(j+8);
                    }
                    else if(TurnChecker==-1&&(tileStatus.left(i,j)||tileStatus.right(i,j)))
                    {
                        p=getPieceInTile(j-8);
                    }   
                    if(p.getEnPassant())
                    {
                        capture(p);
                    }   resetEnPassant();
                    //checking whether en passant can be used on this pawn
                    if((TurnChecker==1&&i>47&&i<56&&j>31&&j<40)||(TurnChecker==-1&&i>7&&i<16&&j>23&&j<32))
                    {
                        getPieceFromLabel(PieceClicked()).setEnPassant(true);
                    }   //checking whether pawn can be promoted
                    if((TurnChecker==1&&j>=0&&j<8)||(TurnChecker==-1&&j>55&&j<64))
                    {
                        getPieceFromLabel(PieceClicked()).promote();
                    }   break;
                case "King":
                    //this bassically tells the king class that the king has moved thus castles is not something to consider
                    if(PieceClicked().getText().startsWith("White"))
                    {
                        wk.setMoved();
                    }
                    else
                    {
                        bk.setMoved();
                    }
                    //this is the king movement during castles, see the king the class before this
                    if(tLabel.getX()==b8.getX() && tLabel.getY()==b8.getY() && wk.getTileCoordinate()==60)//short castle for white
                    {
                        PieceClicked().move(tLabel.getX(),tLabel.getY());
                        WhiteRook1.move(c8.getX(),c8.getY());
                        a=true;
                    }
                    else if(tLabel.getX()==f8.getX() && tLabel.getY()==f8.getY() && wk.getTileCoordinate()==60)//long castle for white
                    {
                        PieceClicked().move(tLabel.getX(),tLabel.getY());
                        WhiteRook2.move(e8.getX(),e8.getY());
                        a=true;
                    }
                    else if(tLabel.getX()==b1.getX() && tLabel.getY()==b1.getY() && bk.getTileCoordinate()==4)//short castle for black
                    {
                        PieceClicked().move(tLabel.getX(),tLabel.getY());
                        BlackRook1.move(c1.getX(),c1.getY());
                        a=true;
                    }
                    else if(tLabel.getX()==f1.getX() && tLabel.getY()==f1.getY() && bk.getTileCoordinate()==4)//long castle for black
                    {
                        PieceClicked().move(tLabel.getX(),tLabel.getY());
                        BlackRook2.move(e1.getX(),e1.getY());
                        a=true;
                    }
                    break;
                case "Rook":
                    
                    //this bassically tells the king class that the rook has moved thus castles is not something to consider
                    if(PieceClicked().getText().startsWith("White"))
                    {
                        if(PieceClicked().getText().endsWith("1"))
                        {
                            wr1.setMoved();
                        }
                        else
                        {
                            wr2.setMoved();
                        }
                    }
                    else
                    {
                        if(PieceClicked().getText().endsWith("1"))
                        {
                            br1.setMoved();
                        }
                        else
                        {
                            br2.setMoved();
                        }
                    }   break;
                default:
                    break;
            }
            if(a==false)
            {
                PieceClicked().move(tLabel.getX(),tLabel.getY());
            }
            TurnChecker*=(-1);
            getPieceFromLabel(PieceClicked()).setTileCoordinate();
            finalTileCoordinate=getPieceFromLabel(PieceClicked()).getTileCoordinate();
            resetAllPieceImage(h1);
            resetPieceClicked();
            resetAllTileColor();
            if(AI)
            {
                if(pc.equals("CPU2") && TurnChecker==-1)
                {
                    AI();
                }
            }
        }   
        if(check()){
            Component frame=null;
            JOptionPane.showMessageDialog(frame, "Check");
            }
        }
        else if(SwingUtilities.isRightMouseButton(evt))
        {
            if(tLabel.getBackground().equals(Color.RED)==false)
            {
                tLabel.setBackground(Color.RED);
            }
            else
            {
                t.setBackground();
            }
        }
    }
    //returns whether this tileCoordinate is under attack
    private void PieceMousePressed(piece p,java.awt.event.MouseEvent evt)
    {
        if(SwingUtilities.isLeftMouseButton(evt))
        {
            p.setJLabel("");
            if(p.checkTurn()){
                resetAllTileColor();
                p.setTileCoordinate();
                xMouse=evt.getX();
                yMouse=evt.getY();
                p.setLegalTiles();
                p.colorLegalTiles();
            }
        }
    }
    private void PieceMouseDrag(piece p,java.awt.event.MouseEvent evt)
    {
        if(SwingUtilities.isLeftMouseButton(evt))
        {
            if(p.checkTurn()){
                int x1=evt.getXOnScreen();
                int y1=evt.getYOnScreen();
                p.getJLabel().setLocation(x1-xMouse,y1-yMouse);
                Tile tile[];
                tile=p.getLegalTile();
            }
        }
    }
    private void PieceMouseReleased(piece p,java.awt.event.MouseEvent evt)
    {
        if(p.checkTurn()){
            boolean a=false;
            boolean moved=false;
            int tileCoordinate=p.getTileCoordinate();
            Tile tile[];
            tile=p.getLegalTile();
            try{
            outer:
            for (Tile tile1 : tile) {
                for(int i=0;i<=10;i++){
                    if(getTileInJlabel(tile1).getX()==(p.getJLabel()).getX()+i || getTileInJlabel(tile1).getX()==(p.getJLabel()).getX()-i)
                    {
                        for(int j=0;j<=10;j++)
                        {
                            if(getTileInJlabel(tile1).getY()==(p.getJLabel()).getY()+j || getTileInJlabel(tile1).getY()==(p.getJLabel()).getY()-j)
                            {
                                switch(p.getType())
                                {
                                    case "King":
                                    if(getTileInJlabel(tile1).getX()==b8.getX() && getTileInJlabel(tile1).getY()==b8.getY() && wk.getTileCoordinate()==60)//short castle for white
                                    {
                                        p.getJLabel().move(getTileInJlabel(tile1).getX(),getTileInJlabel(tile1).getY());
                                        WhiteRook1.move(c8.getX(),c8.getY());
                                        a=true;
                                        moved=true;
                                    }
                                    else if(getTileInJlabel(tile1).getX()==f8.getX() && getTileInJlabel(tile1).getY()==f8.getY() && wk.getTileCoordinate()==60)//long castle for white
                                    {
                                        p.getJLabel().move(getTileInJlabel(tile1).getX(),getTileInJlabel(tile1).getY());
                                        WhiteRook2.move(e8.getX(),e8.getY());
                                        a=true;
                                        moved=true;
                                    }
                                    else if(getTileInJlabel(tile1).getX()==b1.getX() && getTileInJlabel(tile1).getY()==b1.getY() && bk.getTileCoordinate()==4)//short castle for black
                                    {
                                        p.getJLabel().move(getTileInJlabel(tile1).getX(),getTileInJlabel(tile1).getY());
                                        BlackRook1.move(c1.getX(),c1.getY());
                                        a=true;
                                        moved=true;
                                    }
                                    else if(getTileInJlabel(tile1).getX()==f1.getX() && getTileInJlabel(tile1).getY()==f1.getY() && bk.getTileCoordinate()==4)//long castle for black
                                    {
                                        p.getJLabel().move(getTileInJlabel(tile1).getX(),getTileInJlabel(tile1).getY());
                                        BlackRook2.move(e1.getX(),e1.getY());
                                        a=true;
                                        moved=true;
                                    }
                                    break;
                                }
                                if(a==false)
                                {
                                    if(opposingPiecePresent(tileStatus.getTileCoordinate(tile1)))
                                    {
                                        PieceInTile(getTileInJlabel(tile1)).move(6000, 6000);
                                    }
                                    p.getJLabel().setLocation(getTileInJlabel(tile1).getX(),getTileInJlabel(tile1).getY());
                                    moved=true;
                                    resetAllPieceImage(h1);
                                    resetPieceClicked();
                                    resetAllTileColor();
                                    break outer;
                                }
                                else
                                {
                                    resetAllPieceImage(h1);
                                    resetPieceClicked();
                                    resetAllTileColor();
                                    break outer;
                                }
                            }
                        }
                    }
                }
            }
            if(moved==false)
            {
                p.getJLabel().setLocation(getTileInJlabel(tileStatus.getTile(tileCoordinate)).getX(),getTileInJlabel(tileStatus.getTile(tileCoordinate)).getY());
                resetAllPieceImage(h1);
                resetPieceClicked();
                resetAllTileColor();
            }
            else
            {
                p.setMoved();
                TurnChecker*=-1;
                resetAllPieceImage(h1);
                resetPieceClicked();
                resetAllTileColor();
            }
            }
            catch(Exception e)
            {
            }
        }
    }
    public boolean check(int tileCoordinate)
    {
        boolean a=false;
        int temp=TurnChecker;
        int legal[];
        int KingTileCoordinate=tileCoordinate;
        CountOfCheck=0;
        if(temp==1){
            TurnChecker=-1;
            for(piece p:BlackPieces)
            {
                p.setTileCoordinate();
                p.setLegalTileCoordinates();
                legal=p.getLegal();
                try
                {
                    for(int i=0;i<legal.length;i++)
                    {
                        if(KingTileCoordinate==legal[i])
                        {
                            a=true;
                            CountOfCheck++;
                            break;
                        }
                    }
                }
                catch(Exception e)
                {
                }
            }
        }
        else{
            TurnChecker=1;
            for(piece p:WhitePieces)
            {
                p.setTileCoordinate();
                p.setLegalTileCoordinates();
                legal=p.getLegal();
                try{
                for(int i=0;i<legal.length;i++)
                {
                    if(KingTileCoordinate==legal[i])
                    {
                        a=true;
                        CountOfCheck++;
                        break;
                    }
                }
                }
                catch(Exception e)
                {
                    
                }
            }
        }
        TurnChecker=temp;
        for(piece p:pieces)
        {
            if(p.getCaptured())
            {
                p.getJLabel().move(6000,6000);
            }
        }
        return a;
    }
    private boolean check()
    {
        boolean a=false;
        int temp=TurnChecker;
        int legal[];
        int KingTileCoordinate;
        wk.setTileCoordinate();
        bk.setTileCoordinate();
        CountOfCheck=0;
        if(temp==1){
            TurnChecker=-1;
            KingTileCoordinate=wk.getTileCoordinate();
            for(piece p:BlackPieces)
            {
                p.setTileCoordinate();
                p.setLegalTileCoordinates();
                legal=p.getLegal();
                try{
                    for(int i=0;i<legal.length;i++)
                    {
                        if(KingTileCoordinate==legal[i])
                        {
                            a=true;
                            CountOfCheck++;
                            break;
                        }
                    }
                }
                catch(Exception e)
                {
                }
            }
        }
        else{
            TurnChecker=1;
            KingTileCoordinate=bk.getTileCoordinate();
            for(piece p:WhitePieces)
            {
                p.setTileCoordinate();
                p.setLegalTileCoordinates();
                legal=p.getLegal();
                try{
                    for(int i=0;i<legal.length;i++)
                    {
                        if(KingTileCoordinate==legal[i])
                        {
                            a=true;
                            CountOfCheck++;
                            break;
                        }
                    }
                }
                catch(Exception e)
                {
                }
            }
        }
        TurnChecker=temp;
        if(a==true)
        {
            if(checkmate())
            {
                resetAllTileColor();
                resetPieceClicked();
                if(TurnChecker==1)
                {
                    Component frame=null;
                    JOptionPane.showMessageDialog(frame, "Check Mate\nBLACK IS VICTORIOUS");
                }
                else
                {
                    Component frame=null;
                    JOptionPane.showMessageDialog(frame, "Check Mate\nWHITE IS VICTORIOUS");
                }
                controller.setEnd();
                this.setVisible(false);
            }
        }
        return a;
    }
    //returns whether checkmate is true
    private boolean checkmate()
    {
        boolean a=false;
        Tile legal[];
        int count=0;
        if(TurnChecker==1)
        {
            for(piece p:WhitePieces)
            {
                p.setLegalTiles();
                legal=p.getLegalTile();
                for (Tile legal1 : legal) {
                    if (legal1==null) 
                    {
                        break;
                    } 
                    else
                    {
                        count++;
                    }
                }
            }  
            wk.setTileCoordinate();
            wk.setLegalTiles();
            legal=wk.getLegalTile();
            for (Tile legal1 : legal) {
                if (legal1 == null) 
                {
                    break;
                }
                else
                {
                    count++;
                }
            }
            if(count==0)
                a=true;
        }
        else
        {
            for(piece p:BlackPieces)
            {
                p.setLegalTiles();
                legal=p.getLegalTile(); //z
                for (Tile legal1 : legal)
                {
                    if (legal1 == null) 
                    {
                        break;
                    } 
                    else
                    {
                        count++;
                    }
                }
            }
            bk.setTileCoordinate();
            bk.setLegalTiles();
            legal=bk.getLegalTile();
            for (Tile legal1 : legal) 
            {
                if (legal1 ==null) 
                {
                    break;
                }
                else
                {
                    count++;
                }
            }
            if(count==0)
                a=true;
        }
        return a;
    }
    public piece[] getPiece()//returns the pieces that are going to be used for castles to the king class
    {
        piece Castlepieces[]=new piece[3];
        switch(TurnChecker)//this just to prevent more extra lines
        {
            case 1:
                Castlepieces=WhiteCastle;
                break;
            case -1:
                Castlepieces=BlackCastle;
                break;
            default:
                break;
        }
        return Castlepieces;
    }
    public int getTurnChecker()
    {
        return TurnChecker;
    }
    //moves piece p to given tileCoordinate, checks whether it's king comes under check, then moves it back
    public boolean check(piece p,int tileCoordinate)
    {
        boolean result, capture=false;
        p.setTileCoordinate();
        int originalTileCoordinate=p.getTileCoordinate();
        piece temp=wk1;
        /*
        p.setTileCoordinate(tileCoordinate);
        result=check(p.getColor().toLowerCase());
        p.setTileCoordinate(originalTileCoordinate);
        p.setLegalTileCoordinates();
        */
        if(hasPieceOnTile(tileFromCoordinate(tileCoordinate)))
        {
            temp=PieceOnTile(tileFromCoordinate(tileCoordinate));
            temp.remove();
            capture=true;
        }
        p.move(tileCoordinate);
        result=Check();
        p.move(originalTileCoordinate);
        if(capture)
        {
            temp.move(tileCoordinate);
            temp.setTileCoordinate();
        }
        p.setTileCoordinate();
        if(p.getType().equals("King")==false)
            p.setLegalTileCoordinates();
        
        return result;
    }
    //returns the tile (object) corresponding to given tileCoordinate
    public tile tileFromCoordinate(int tileCoordinate)
    {
        return tiles[tileCoordinate];
    }
    //checks whether the current king is under check
    public boolean Check()
    {
        boolean result=false;
        int temp=TurnChecker;
        int legal[];
        int KingTileCoordinate;
        wk.setTileCoordinate();
        bk.setTileCoordinate();
        CountOfCheck=0;
        if(temp==1){
            TurnChecker=-1;
            KingTileCoordinate=wk.getTileCoordinate();
            for(piece p:BlackPieces)
            {
                p.setTileCoordinate();
                p.setLegalTileCoordinates();
                legal=p.getLegal();
                try{
                    for(int i=0;i<legal.length;i++)
                    {
                        if(KingTileCoordinate==legal[i])
                        {
                            result=true;
                            CountOfCheck++;
                            break;
                        }
                    }
                }
                catch(Exception e)
                {
                }
            }
        }
        else{
            TurnChecker=1;
            KingTileCoordinate=bk.getTileCoordinate();
            for(piece p:WhitePieces)
            {
                p.setTileCoordinate();
                p.setLegalTileCoordinates();
                legal=p.getLegal();
                try{
                    for(int i=0;i<legal.length;i++)
                    {
                        if(KingTileCoordinate==legal[i])
                        {
                            result=true;
                            CountOfCheck++;
                            break;
                        }
                    }
                }
                catch(Exception e)
                {
                }
            }
        }
        TurnChecker=temp;
        return result;
    }
    public boolean hasPieceOnTile(tile t)
    {
        boolean result=false;
        for(piece p:pieces)
        {
            if(p.getX()==t.getX()&&p.getY()==t.getY())
            {
                result=true;
                break;
            }
        }
        return result;
    }
    public piece PieceOnTile(tile t)
    {
        piece result=wk1;
        for(piece p:pieces)
        {
            if(p.getX()==t.getX()&&p.getY()==t.getY())
            {
                result=p;
                break;
            }
        }
        return result;
    }
    private void AI()
    {
        piece p=cpu2.PieceThatMoves();
        Tile legalTile=cpu2.LegalTile();
        getPieceInTile(tileStatus.getTileCoordinate(legalTile)).getJLabel().move(6000, 6000);
        getPieceInTile(tileStatus.getTileCoordinate(legalTile)).setCaptured();
        p.moveForAI(getTileInJlabel(legalTile));
        TurnChecker*=-1;
    }
    
    protected void setController(GameController controller)
    {
        this.controller=controller;
    }
    protected void setGame(piece BlackPieces[],piece WhitePieces[],piece wk,piece bk,int TurnChecker)
    {
        for(piece p:this.BlackPieces)
        {
            for(piece p2:BlackPieces)
            {
                if(p.getJLabel().getText().equals(p2.getJLabel().getText()))
                {
                    p.getJLabel().move(getTileInJlabel(tileStatus.getTile(p2.getTileCoordinate())).getX(), getTileInJlabel(tileStatus.getTile(p2.getTileCoordinate())).getY());
                }
            }
        }
        this.bk.getJLabel().move(getTileInJlabel(tileStatus.getTile(bk.getTileCoordinate())).getX(),getTileInJlabel(tileStatus.getTile(bk.getTileCoordinate())).getY());
        for(piece p:this.WhitePieces)
        {
            for(piece p2:WhitePieces)
            {
                if(p.getJLabel().getText().equals(p2.getJLabel().getText()))
                {
                    p.getJLabel().move(getTileInJlabel(tileStatus.getTile(p2.getTileCoordinate())).getX(),getTileInJlabel(tileStatus.getTile(p2.getTileCoordinate())).getY());
                }
            }
        }
        this.wk.getJLabel().move(getTileInJlabel(tileStatus.getTile(wk.getTileCoordinate())).getX(),getTileInJlabel(tileStatus.getTile(wk.getTileCoordinate())).getY());
        this.TurnChecker=TurnChecker;
    }
    protected boolean getMove()
    {
        return true;
    }
}
